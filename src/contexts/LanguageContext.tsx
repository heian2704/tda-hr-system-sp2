import React, { createContext, useContext, useState, Dispatch, SetStateAction, ReactNode, useEffect } from 'react';

// Define specific types for translation structure for better type safety
interface SidebarItem {
  path: string;
  label: string;
  icon: string;
}

export interface EmployeePageTranslations {
  totalEmployee: string;
  active: string;
  onLeave: string;
  allEmployees: string;
  sortBy: string;
  joinDate: string;
  addNewEmployee: string;
  showing: string;
  of: string;
  employees: string;
  fullNameColumn: string;
  employeeIdColumn: string;
  phoneNumberColumn: string;
  addressColumn: string;
  roleColumn: string;
  joinDateColumn: string;
  statusColumn: string;
  actionColumn: string;
  editButton: string;
  address: string;
  name: string;
  status: string;
  addNewEmployeeTitle: string;
  fullNamePlaceholder: string;
  baseRatePlaceholder: string;
  phoneNumberPlaceholder: string;
  addressPlaceholder: string;
  rolePlaceholder: string;
  joinDatePlaceholder: string;
  selectTypeLabel: string;
  activeStatus: string;
  onLeaveStatus: string;
  cancelButton: string;
  addButton: string;
  saving: string;
  createSuccessfully: string;
  editSuccessfully: string;
  deleteSuccessfully: string;
  statusUpdate: string;
  editEmployeeTitle: string;
  saveChangesButton: string;
  confirmDeleteTitle: string;
  confirmDeleteMessage1: string;
  confirmDeleteMessage2: string;
  deleteButton: string;
}

export interface WorkLogPageTranslations {
  [x: string]: string;
  createdSuccessfully: string;
  updatedSuccessfully: string;
  deleteSuccessfully: string;
  totalWorkLogs: string;
  totalCompletedWorklogs: string;
  totalQuantityProduced: string;
  workLogsTitle: string;
  searchPlaceholder: string;
  sortBy: string;
  date: string;
  addNewWorkLog: string;
  fullNameColumn: string;
  employeeIdColumn: string;
  dateColumn: string;
  productNameColumn: string;
  quantityColumn: string;
  roleColumn: string;
  totalPriceColumn: string;
  noteColumn: string;
  actionColumn: string;
  editButton: string;
  deleteButton: string;
  deleting: string;
  addNewWorkLogTitle: string;
  editWorkLogTitle: string;
  fullNameLabel: string;
  productRateLabel: string;
  quantityLabel: string;
  roleLabel: string;
  dateLabel: string;
  noteLabel: string;
  notePlaceholder: string;
  cancelButton: string;
  addWorkLogButton: string;
  saving: string;
  saveChangesButton: string;
  confirmDeleteTitle: string;
  confirmDeleteMessage1: string;
  confirmDeleteMessage2: string;
  deleteButtonConfirm: string;
  selectEmployee: string;
  optional: string;
  datePlaceholder: string;
  inActiveStatus: string;
  statusOnGoing: string;
  statusCompleted: string;
  statusRejected: string;
  all: string;
}

interface PayrollPageTranslations {
  totalNetPayroll: string;
  totalBonus: string;
  totalDeduction: string;
  allPayrollTitle: string;
  payrollPeriodDisplay: string;
  exportButton: string;
  searchPlaceholder: string;
  sortBy: string;
  date: string;
  fullNameColumn: string;
  roleColumn: string;
  productRateColumn: string;
  totalQuantityColumn: string;
  totalSalaryColumn: string;
  bonusDeductionColumn: string;
  netSalaryColumn: string;
  showing: string;
  of: string;
  payrollEntries: string;
  none: string;
  addBonusDeductionTitle: string;
  type: string;
  bonus: string;
  deduction: string;
  amount: string;
  notePlaceholder: string;
  optional: string;
  cancelButton: string;
  saveButton: string;
  invalidAmount: string;
  periodColumn: string;
  periodTypeLabel: string;
  periodTypeDay: string;
  periodTypeWeek: string;
  periodTypeMonth: string;
  periodTypeCustom: string;
  startDateLabel: string;
  endDateLabel: string;
  applyFilterButton: string;
  currentPeriod: string;
  paidStatusColumn: string;
  statusPaid: string;
  statusUnpaid: string;
}

export interface ExpenseIncomePageTranslations {
  totalNetIncomeExpense: string;
  totalIncome: string;
  totalExpense: string;
  incomeTab: string;
  expenseTab: string;
  sortBy: string;
  amount: string;
  addNewIncome: string;
  addNewExpense: string;
  incomeTitleColumn: string;
  expenseTitleColumn: string;
  amountColumn: string;
  dateColumn: string;
  noteColumn: string;
  actionColumn: string;
  editButton: string;
  deleteButton: string;
  showing: string;
  of: string;
  incomeEntries: string;
  expenseEntries: string;
  na: string;
  noEntriesFound: string;
  addNewIncomeTitle: string;
  addNewExpenseTitle: string;
  editIncomeTitle: string;
  editExpenseTitle: string;
  incomeNamePlaceholder: string;
  expenseTitlePlaceholder: string;
  clientPlaceholder: string;
  amountPlaceholder: string;
  notePlaceholder: string;
  cancelButton: string;
  addButton: string;
  saving: string;
  saveChangesButton: string;
  optional: string;
  invalidAmount: string;
  deleteMessage: string;
  confirmDeleteTitle: string;
  confirmDeleteMessage1: string;
  confirmDeleteMessage2: string;
  deleteButtonConfirm: string;
  createSuccessfully: string;
  editSuccessfully: string;
  deleteSuccessfully: string;
  periodColumn: string;
  periodTypeLabel: string;
  periodTypeDay: string;
  periodTypeWeek: string;
  periodTypeMonth: string;
  periodTypeCustom: string;
  startDateLabel: string;
  endDateLabel: string;
  applyFilterButton: string;
  currentPeriod: string;
  selectPeriod: string;
}

interface DashboardTranslations {
  allEmployees: string;
  noData: string;
  noActivities: string;
  weeklyWorklogTrend: string;
  bestDay: string;
  yearlyFinancialOverview: string;
  title: string;
  totalEmployees: string;
  onBoardEmployeesByMonth: string;
  monthlyPayroll: string;
  monthlyIncome: string;
  monthlyExpenses: string;
  monthlyProfit: string;
  update: string;
  employeePerformanceOverview: string;
  activityLog: string;
  payrollTrend: string;
  incomeVsExpenses: string;
  total: string;
  noActivityFound: string;
  worklogQuantity: string;
  totalValue: string;
  monthlyPayrollTitle: string;
  avgWorklogQuantity: string;
  bestPerformanceDay: string;
  allMonths: string;
  allYears: string;
  month: string;
  year: string;
}

// New interface for Attendance page translations
export interface AttendancePageTranslations {
  [x: string]: ReactNode;
  attendanceTitle: string;
  totalEmployees: string;
  present: string;
  absent: string;
  clockInPlaceholder: string;
  clockOutPlaceholder: string;
  durationPlaceholder: string;
  actions: string;
  clockIn: string;
  clockOut: string;
  markAsPresent: string;
  markAsAbsent: string;
  bulkActions: string;
  selectAll: string;
  showing: string;
  of: string;
  employees: string;
  noData: string;
  selectTime: string;
  confirm: string;
  cancel: string;
  bulkClockIn: string;
  bulkClockOut: string;
  loading: string;
}

// Extend the main AppTranslations to include the new Attendance page
interface AppTranslations {
  totalEmployees: ReactNode;
  present: ReactNode;
  absent: ReactNode;
  attendanceTitle: ReactNode;
  loading: ReactNode;
  employeeName: string;
  durationPlaceholder: ReactNode;
  actions: ReactNode;
  noData: ReactNode;
  showing: ReactNode;
  of: ReactNode;
  selectTime: ReactNode;
  cancel: ReactNode;
  confirm: ReactNode;
  attendancePage: AttendancePageTranslations; // Added this line
  dashboard: DashboardTranslations;
  sidebar: SidebarItem[];
  searchPlaceholder: string;
  logout: string;
  employeePage: EmployeePageTranslations;
  workLogPage: WorkLogPageTranslations;
  payrollPage: PayrollPageTranslations;
  expenseIncomePage: ExpenseIncomePageTranslations;
  common: {
    loading: string;
    error: string;
    sunday: string;
    monday: string;
    tuesday: string;
    wednesday: string;
    thursday: string;
    friday: string;
    saturday: string;
  };
}

interface AllTranslationsCollection {
  English: AppTranslations;
  Burmese: AppTranslations;
}

interface LanguageContextType {
  language: "English" | "Burmese";
  setLanguage: Dispatch<SetStateAction<"English" | "Burmese">>;
  translations: AppTranslations;
  allTranslations: AllTranslationsCollection;
}

const allAppTranslations: AllTranslationsCollection = {
  English: {
    sidebar: [
      { path: "/dashboard", label: "Dashboard", icon: "üìä" },
      { path: "/employee", label: "Employee", icon: "üßë‚Äçüíº" },
      { path: "/attendance", label: "Attendance", icon: "üìÖ" },
      { path: "/worklog", label: "Work Log", icon: "üïí" },
      { path: "/payroll", label: "Payroll", icon: "üíµ" },
      { path: "/expense-income", label: "Expense & Income", icon: "üí≥" },
      { path: "/application", label: "Application", icon: "üìù" }
    ],
    searchPlaceholder: "Search",
    logout: "Log out",
    common: {
      loading: "Loading",
      error: "Error",
      sunday: "Sunday",
      monday: "Monday",
      tuesday: "Tuesday",
      wednesday: "Wednesday",
      thursday: "Thursday",
      friday: "Friday",
      saturday: "Saturday",
    },
    employeePage: {
      totalEmployee: "Total Employee",
      active: "Active",
      onLeave: "On Leave",
      allEmployees: "All Employees",
      sortBy: "Sort by:",
      joinDate: "Join Date",
      addressPlaceholder: "Address",
      addNewEmployee: "Add New Employee",
      showing: "Showing",
      of: "of",
      employees: "employees",
      fullNameColumn: "Full Name",
      employeeIdColumn: "Employee ID",
      phoneNumberColumn: "Phone Number",
      addressColumn: "Address",
      roleColumn: "Role",
      joinDateColumn: "Join Date",
      statusColumn: "Status",
      actionColumn: "Action",
      editButton: "Edit",
      address: "Address",
      name: "Name",
      status: "Status",
      addNewEmployeeTitle: "Add new employee",
      fullNamePlaceholder: "Full Name",
      baseRatePlaceholder: "Base rate",
      phoneNumberPlaceholder: "Phone number",
      rolePlaceholder: "Role",
      joinDatePlaceholder: "Join date (DD/MM/YYYY)",
      selectTypeLabel: "Select Type",
      activeStatus: "Active",
      onLeaveStatus: "On Leave",
      cancelButton: "Cancel",
      addButton: "Add",
      saving: "Saving...",
      createSuccessfully: "Employee created successfully.",
      editSuccessfully: "Employee updated successfully.",
      deleteSuccessfully: "Employee deleted successfully.",
      statusUpdate: "Status updated successfully.",
      editEmployeeTitle: "Edit Employee",
      saveChangesButton: "Save Changes",
      confirmDeleteTitle: "Confirm Deletion",
      confirmDeleteMessage1: "Are you sure you want to delete",
      confirmDeleteMessage2: "? This action cannot be undone.",
      deleteButton: "Delete",
    },
    attendancePage: {
      attendanceTitle: "Employee Attendance",
      totalEmployees: "Total Employees",
      present: "Present",
      absent: "Absent",
      clockInPlaceholder: "Clock In",
      clockOutPlaceholder: "Clock Out",
      durationPlaceholder: "Duration",
      actions: "Actions",
      clockIn: "Clock In",
      clockOut: "Clock Out",
      markAsPresent: "Mark as Present",
      markAsAbsent: "Mark as Absent",
      bulkActions: "Bulk Actions",
      selectAll: "Select All",
      showing: "Showing",
      of: "of",
      employees: "employees",
      noData: "No attendance data found for this date. Click Clock In to get started.",
      selectTime: "Select Time",
      confirm: "Confirm",
      cancel: "Cancel",
      bulkClockIn: "Bulk Clock In",
      bulkClockOut: "Bulk Clock Out",
      loading: "Loading employees...",
    },
    workLogPage: {
      createdSuccessfully: "Worklog Created",
      updatedSuccessfully: "Worklog Updated",
      deleteSuccessfully: "Worklog Deleted",
      totalWorkLogs: "Total Work Logs",
      totalCompletedWorklogs: "Total Completed Worklogs",
      totalQuantityProduced: "Total Quantity Produced",
      workLogsTitle: "Work Logs",
      searchPlaceholder: "Type employee name to search...",
      sortBy: "Sort by:",
      date: "Date",
      addNewWorkLog: "Add New Work Log",
      fullNameColumn: "Full Name",
      employeeIdColumn: "Employee ID",
      dateColumn: "Date",
      productNameColumn: "Product Name",
      quantityColumn: "Quantity",
      roleColumn: "Role",
      totalPriceColumn: "Total Price",
      noteColumn: "Note",
      actionColumn: "Action",
      editButton: "Edit",
      deleteButton: "Delete",
      deleting: "Deleting...",
      addNewWorkLogTitle: "Add New Work Log",
      editWorkLogTitle: "Edit Work Log",
      fullNameLabel: "Full Name",
      productRateLabel: "Product Rate",
      quantityLabel: "Quantity",
      roleLabel: "Role",
      dateLabel: "Date",
      noteLabel: "Note (Optional)",
      notePlaceholder: "Any additional notes...",
      cancelButton: "Cancel",
      addWorkLogButton: "Add Work Log",
      saving: "Saving...",
      saveChangesButton: "Save Changes",
      confirmDeleteTitle: "Confirm Deletion",
      confirmDeleteMessage1: "Are you sure you want to delete the work log entry for",
      confirmDeleteMessage2: "? This action cannot be undone.",
      deleteButtonConfirm: "Delete",
      selectEmployee: "Select Employee",
      optional: "(Optional)",
      datePlaceholder: "YYYY-MM-DD",
      inActiveStatus: "Inactive",
      statusOnGoing: "On Going",
      statusCompleted: "Completed",
      statusRejected: "Rejected",
      all: "All",
    },
    payrollPage: {
      totalNetPayroll: "Total Net Payroll",
      totalBonus: "Total Bonus",
      totalDeduction: "Total Deduction",
      allPayrollTitle: "All Payroll",
      payrollPeriodDisplay: "Payroll Period",
      exportButton: "Export",
      searchPlaceholder: "Type employee name to search...",
      sortBy: "Sort by:",
      date: "Date",
      fullNameColumn: "Full Name",
      roleColumn: "Role",
      productRateColumn: "Product Rate",
      totalQuantityColumn: "Total Quantity",
      totalSalaryColumn: "Total Salary",
      bonusDeductionColumn: "Bonus / Deduction",
      netSalaryColumn: "Net Salary",
      showing: "Showing",
      of: "of",
      payrollEntries: "payroll entries",
      none: "None",
      addBonusDeductionTitle: "Add Bonus / Deduction",
      type: "Type",
      bonus: "Bonus",
      deduction: "Deduction",
      amount: "Amount",
      notePlaceholder: "Add note (optional)",
      optional: "(Optional)",
      cancelButton: "Cancel",
      saveButton: "Save",
      invalidAmount: "Invalid amount",
      periodColumn: "Period",
      periodTypeLabel: "Period Type",
      periodTypeDay: "Day",
      periodTypeWeek: "Week",
      periodTypeMonth: "Month",
      periodTypeCustom: "Custom",
      startDateLabel: "Start Date",
      endDateLabel: "End Date",
      applyFilterButton: "Apply Filter",
      currentPeriod: "Current Period",
      paidStatusColumn: "Paid Status",
      statusPaid: "Paid",
      statusUnpaid: "Unpaid",
    },
    expenseIncomePage: {
      totalNetIncomeExpense: "Total Net Income/Expense",
      totalIncome: "Total Income",
      totalExpense: "Total Expense",
      incomeTab: "Income",
      expenseTab: "Expense",
      sortBy: "Sort by:",
      amount: "Amount",
      addNewIncome: "Add New Income",
      addNewExpense: "Add New Expense",
      incomeTitleColumn: "Title",
      expenseTitleColumn: "Title",
      amountColumn: "Amount",
      dateColumn: "Date",
      noteColumn: "Note",
      actionColumn: "Action",
      editButton: "Edit",
      deleteButton: "Delete",
      showing: "Showing",
      of: "of",
      incomeEntries: "income entries",
      expenseEntries: "expense entries",
      na: "N/A",
      noEntriesFound: "No entries found.",
      addNewIncomeTitle: "Add New Income",
      addNewExpenseTitle: "Add New Expense",
      editIncomeTitle: "Edit Income",
      editExpenseTitle: "Edit Expense",
      incomeNamePlaceholder: "Income title",
      expenseTitlePlaceholder: "Expense title",
      clientPlaceholder: "Client (optional)",
      amountPlaceholder: "Amount",
      notePlaceholder: "Note (optional)",
      cancelButton: "Cancel",
      addButton: "Add",
      saving: "Saving...",
      saveChangesButton: "Save Changes",
      optional: "(Optional)",
      invalidAmount: "Invalid amount",
      deleteMessage: "Are you sure you want to delete this entry? This action cannot be undone.",
      confirmDeleteTitle: "Confirm Deletion",
      confirmDeleteMessage1: "Are you sure you want to delete this entry?",
      confirmDeleteMessage2: "This action cannot be undone.",
      deleteButtonConfirm: "Delete",
      createSuccessfully: "Entry created successfully.",
      editSuccessfully: "Entry updated successfully.",
      deleteSuccessfully: "Entry deleted successfully.",
      periodColumn: "Period",
      periodTypeLabel: "Period Type",
      periodTypeDay: "Day",
      periodTypeWeek: "Week",
      periodTypeMonth: "Month",
      periodTypeCustom: "Custom",
      startDateLabel: "Start Date",
      endDateLabel: "End Date",
      applyFilterButton: "Apply Filter",
      currentPeriod: "Current Period",
      selectPeriod: "Select Period",
    },
    dashboard: {
      allEmployees: "All Employees",
      noData: "No data available",
      noActivities: "No recent activities",
      weeklyWorklogTrend: "Weekly Worklog Trend",
      bestDay: "Best Day",
      yearlyFinancialOverview: "Yearly Financial Overview",
      title: "Dashboard",
      totalEmployees: "Total Employees",
      onBoardEmployeesByMonth: "Onboard Employees",
      monthlyPayroll: "Monthly Payroll",
      monthlyIncome: "Monthly Income",
      monthlyExpenses: "Monthly Expenses",
      monthlyProfit: "Monthly Profit",
      update: "Updated",
      employeePerformanceOverview: "Employee Performance Overview",
      activityLog: "Activity Log",
      payrollTrend: "Payroll Trend",
      incomeVsExpenses: "Income vs Expenses",
      total: "Total",
      noActivityFound: "No activity found",
      worklogQuantity: "Worklog Quantity",
      totalValue: "Total Value",
      monthlyPayrollTitle: "Monthly Payroll",
      avgWorklogQuantity: "Avg. Worklog Quantity",
      bestPerformanceDay: "Best Performance Day",
      allMonths: "All Months",
      allYears: "All Years",
      month: "Month",
      year: "Year",
    },
    totalEmployees: '',
    present: '',
    absent: '',
    attendanceTitle: '',
    loading: '',
    employeeName: '',
    durationPlaceholder: '',
    actions: '',
    noData: '',
    showing: '',
    of: '',
    selectTime: '',
    cancel: '',
    confirm: ''
  },
  Burmese: {
    sidebar: [
      { path: "/dashboard", label: "·Äí·ÄÄ·Ä∫·Äõ·Äæ·Ä∫·Äò·ÄØ·Äê·Ä∫", icon: "üìä" },
      { path: "/employee", label: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏", icon: "üßë‚Äçüíº" },
      { path: "/attendance", label: "·Äê·ÄÄ·Ä∫·Äõ·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ", icon: "üìÖ" },
      { path: "/worklog", label: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏", icon: "üïí" },
      { path: "/payroll", label: "·Äú·ÄÖ·Ä¨", icon: "üíµ" },
      { path: "/expense-income", label: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫·Äî·Äæ·ÄÑ·Ä∑·Ä∫·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±", icon: "üí≥" },
      { path: "/application", label: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äú·Äª·Äæ·Ä±·Ä¨·ÄÄ·Ä∫·Äú·ÄΩ·Äæ·Ä¨", icon: "üìù" }
    ],
    searchPlaceholder: "·Äõ·Äæ·Ä¨·Äñ·ÄΩ·Ä±·Äï·Ä´",
    logout: "·Äë·ÄΩ·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
    common: {
      loading: "·Äê·ÄÑ·Ä∫·Äî·Ä±·Äû·Ää·Ä∫",
      error: "·Ä°·Äô·Äæ·Ä¨·Ä∏",
      sunday: "·Äê·Äî·ÄÑ·Ä∫·Äπ·ÄÇ·Äî·ÄΩ·Ä±",
      monday: "·Äê·Äî·ÄÑ·Ä∫·Äπ·Äú·Ä¨",
      tuesday: "·Ä°·ÄÑ·Ä∫·Äπ·ÄÇ·Ä´",
      wednesday: "·Äó·ÄØ·Äí·Äπ·Äì·Äü·Ä∞·Ä∏",
      thursday: "·ÄÄ·Äº·Ä¨·Äû·Äï·Äê·Ä±·Ä∏",
      friday: "·Äû·Ä±·Ä¨·ÄÄ·Äº·Ä¨",
      saturday: "·ÄÖ·Äî·Ä±",
    },
    employeePage: {
      totalEmployee: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏",
      active: "·Äú·ÄØ·Äï·Ä∫·ÄÑ·Äî·Ä∫·Ä∏·ÄÅ·ÄΩ·ÄÑ·Ä∫·Äù·ÄÑ·Ä∫",
      onLeave: "·ÄÅ·ÄΩ·ÄÑ·Ä∑·Ä∫·Äö·Ä∞",
      allEmployees: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·Ä¨·Ä∏·Äú·ÄØ·Ä∂·Ä∏",
      sortBy: "‚Äå·ÄÖ·ÄÆ·ÄÖ·ÄÖ·Ä∫·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äõ·Äî·Ä∫",
      joinDate: "·ÄÖ·Äê·ÄÑ·Ä∫·Äù·ÄÑ·Ä∫·Äõ·Ä±·Ä¨·ÄÄ·Ä∫·Äû·Ää·Ä∫·Ä∑·Äî·Ä±·Ä∑",
      addressPlaceholder: "·Äî·Ä±·Äõ·Äï·Ä∫·Äú·Ä≠·Äï·Ä∫·ÄÖ·Ä¨",
      addNewEmployee: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      showing: "·Äï·Äº·Äû·Äî·Ä±·Äû·Ää·Ä∫",
      of: "·Åè",
      employees: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      fullNameColumn: "·Ä°·Äô·Ää·Ä∫·Ä°·Äï·Äº·Ää·Ä∑·Ä∫·Ä°·ÄÖ·ÄØ·Ä∂",
      employeeIdColumn: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏ ID",
      phoneNumberColumn: "·Äñ·ÄØ·Äî·Ä∫·Ä∏·Äî·Ä∂·Äï·Ä´·Äê·Ä∫",
      addressColumn: "·Äî·Ä±·Äõ·Äï·Ä∫·Äú·Ä≠·Äï·Ä∫·ÄÖ·Ä¨",
      roleColumn: "·Äõ·Ä¨·Äë·Ä∞·Ä∏",
      joinDateColumn: "·ÄÖ·Äê·ÄÑ·Ä∫·Äù·ÄÑ·Ä∫·Äõ·Ä±·Ä¨·ÄÄ·Ä∫·Äû·Ää·Ä∑·Ä∫·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤",
      statusColumn: "·Ä°·ÄÅ·Äº·Ä±·Ä°·Äî·Ä±",
      actionColumn: "·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫",
      editButton: "·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      address: "·Äî·Ä±·Äõ·Äï·Ä∫·Äú·Ä≠·Äï·Ä∫·ÄÖ·Ä¨",
      name: "·Ä°·Äô·Ää·Ä∫",
      status: "·Ä°·ÄÅ·Äº·Ä±·Ä°·Äî·Ä±",
      addNewEmployeeTitle: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      fullNamePlaceholder: "·Ä°·Äô·Ää·Ä∫·Ä°·Äï·Äº·Ää·Ä∑·Ä∫·Ä°·ÄÖ·ÄØ·Ä∂",
      baseRatePlaceholder: "·Ä°·ÄÅ·Äº·Ä±·ÄÅ·Ä∂·Äî·Äæ·ÄØ·Äî·Ä∫·Ä∏·Äë·Ä¨·Ä∏",
      phoneNumberPlaceholder: "·Äñ·ÄØ·Äî·Ä∫·Ä∏·Äî·Ä∂·Äï·Ä´·Äê·Ä∫",
      rolePlaceholder: "·Äõ·Ä¨·Äë·Ä∞·Ä∏",
      joinDatePlaceholder: "·ÄÖ·Äê·ÄÑ·Ä∫·Äù·ÄÑ·Ä∫·Äõ·Ä±·Ä¨·ÄÄ·Ä∫·Äû·Ää·Ä∑·Ä∫·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤ (DD/MM/YYYY)",
      selectTypeLabel: "·Ä°·Äô·Äª·Ä≠·ÄØ·Ä∏·Ä°·ÄÖ·Ä¨·Ä∏·Äõ·ÄΩ·Ä±·Ä∏·Äï·Ä´",
      activeStatus: "·Äú·ÄØ·Äï·Ä∫·ÄÑ·Äî·Ä∫·Ä∏·ÄÅ·ÄΩ·ÄÑ·Ä∫·Äù·ÄÑ·Ä∫",
      onLeaveStatus: "·ÄÅ·ÄΩ·ÄÑ·Ä∑·Ä∫·Äö·Ä∞",
      cancelButton: "·Äï·Äö·Ä∫·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
      addButton: "·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      saving: "·Äû·Ä≠·Äô·Ä∫·Ä∏·ÄÜ·Ää·Ä∫·Ä∏·Äî·Ä±·Äû·Ää·Ä∫...",
      createSuccessfully: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äû·ÄΩ·ÄÑ·Ä∫·Ä∏·Äô·Äæ·ÄØ ·Ä°·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äº·ÄÑ·Ä∫·Äû·Ää·Ä∫·Åã",
      editSuccessfully: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·ÄÅ·Äª·ÄÄ·Ä∫·Ä°·Äú·ÄÄ·Ä∫ ·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äô·Äæ·ÄØ ·Ä°·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äº·ÄÑ·Ä∫·Äû·Ää·Ä∫·Åã",
      deleteSuccessfully: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·ÄÅ·Äª·ÄÄ·Ä∫·Ä°·Äú·ÄÄ·Ä∫ ·Äñ·Äª·ÄÄ·Ä∫·Äû·Ä≠·Äô·Ä∫·Ä∏·Äô·Äæ·ÄØ ·Ä°·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äº·ÄÑ·Ä∫·Äû·Ää·Ä∫·Åã",
      statusUpdate: "·Ä°·ÄÅ·Äº·Ä±·Ä°·Äî·Ä± ·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äô·Äæ·ÄØ ·Ä°·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äº·ÄÑ·Ä∫·Äû·Ää·Ä∫·Åã",
      editEmployeeTitle: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      saveChangesButton: "·Ä°·Äï·Äº·Ä±·Ä¨·ÄÑ·Ä∫·Ä∏·Ä°·Äú·Ä≤·Äô·Äª·Ä¨·Ä∏·Äû·Ä≠·Äô·Ä∫·Ä∏·Äõ·Äî·Ä∫",
      confirmDeleteTitle: "·Äñ·Äª·ÄÄ·Ä∫·Äû·Ä≠·Äô·Ä∫·Ä∏·Äõ·Äî·Ä∫·Ä°·Äê·Ää·Ä∫·Äï·Äº·ÄØ·Äï·Ä´",
      confirmDeleteMessage1: "·Äñ·Äª·ÄÄ·Ä∫·Äû·Ä≠·Äô·Ä∫·Ä∏·Äõ·Äî·Ä∫ ·Äû·Ä±·ÄÅ·Äª·Ä¨·Äï·Ä´·Äû·Äú·Ä¨·Ä∏",
      confirmDeleteMessage2: "·Ä§·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫·ÄÄ·Ä≠·ÄØ ·Äï·Äº·Äî·Ä∫·Äú·Ää·Ä∫·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Åç·Äô·Äõ·Äï·Ä´·Åã",
      deleteButton: "·Äñ·Äª·ÄÄ·Ä∫·Äô·Ää·Ä∫",
    },
    attendancePage: {
      attendanceTitle: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏ ·Äê·ÄÄ·Ä∫·Äõ·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ",
      totalEmployees: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏ ·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏",
      present: "·Äï·ÄÖ·Äπ·ÄÖ·ÄØ·Äï·Äπ·Äï·Äî·Ä∫",
      absent: "·Äô·Äõ·Äæ·Ä≠",
      clockInPlaceholder: "·Äî·Ä¨·Äõ·ÄÆ ·ÄÖ·Äê·ÄÑ·Ä∫·Äù·ÄÑ·Ä∫·Äõ·Ä±·Ä¨·ÄÄ·Ä∫",
      clockOutPlaceholder: "·Äî·Ä¨·Äõ·ÄÆ ·Äë·ÄΩ·ÄÄ·Ä∫·ÄÅ·ÄΩ·Ä¨",
      durationPlaceholder: "·ÄÄ·Äº·Ä¨·ÄÅ·Äª·Ä≠·Äî·Ä∫",
      actions: "·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äæ·ÄØ·Äô·Äª·Ä¨·Ä∏",
      clockIn: "·Äî·Ä¨·Äõ·ÄÆ ·ÄÖ·Äê·ÄÑ·Ä∫·Äù·ÄÑ·Ä∫·Äõ·Ä±·Ä¨·ÄÄ·Ä∫",
      clockOut: "·Äî·Ä¨·Äõ·ÄÆ ·Äë·ÄΩ·ÄÄ·Ä∫·ÄÅ·ÄΩ·Ä¨",
      markAsPresent: "·Äï·ÄÖ·Äπ·ÄÖ·ÄØ·Äï·Äπ·Äï·Äî·Ä∫·Ä°·Äñ·Äº·ÄÖ·Ä∫ ·Äô·Äæ·Äê·Ä∫·Äû·Ä¨·Ä∏·Äï·Ä´",
      markAsAbsent: "·Äô·Äõ·Äæ·Ä≠·Ä°·Äñ·Äº·ÄÖ·Ä∫ ·Äô·Äæ·Äê·Ä∫·Äû·Ä¨·Ä∏·Äï·Ä´",
      bulkActions: "·Ä°·ÄÖ·ÄØ·Äú·Ä≠·ÄØ·ÄÄ·Ä∫ ·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫·Äô·Äª·Ä¨·Ä∏",
      selectAll: "·Ä°·Ä¨·Ä∏·Äú·ÄØ·Ä∂·Ä∏·Äõ·ÄΩ·Ä±·Ä∏·Äï·Ä´",
      showing: "·Äï·Äº·Äû·Äî·Ä±·Äû·Ää·Ä∫",
      of: "·Åè",
      employees: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      noData: "·Ä§·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤·Ä°·Äê·ÄΩ·ÄÄ·Ä∫ ·Äê·ÄÄ·Ä∫·Äõ·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ·Äí·Ä±·Äê·Ä¨·Äô·Äê·ÄΩ·Ä±·Ä∑·Äï·Ä´·Åã ·Äî·Ä¨·Äõ·ÄÆ·ÄÖ·Äê·ÄÑ·Ä∫·Äù·ÄÑ·Ä∫·Äõ·Ä±·Ä¨·ÄÄ·Ä∫·Äõ·Äî·Ä∫ ·ÄÄ·Äú·ÄÖ·Ä∫·Äî·Äæ·Ä≠·Äï·Ä∫·Äï·Ä´·Åã",
      selectTime: "·Ä°·ÄÅ·Äª·Ä≠·Äî·Ä∫·Äõ·ÄΩ·Ä±·Ä∏·Äï·Ä´",
      confirm: "·Ä°·Äê·Ää·Ä∫·Äï·Äº·ÄØ·Äï·Ä´",
      cancel: "·Äï·Äö·Ä∫·Äñ·Äª·ÄÄ·Ä∫·Äï·Ä´",
      bulkClockIn: "·Ä°·ÄÖ·ÄØ·Äú·Ä≠·ÄØ·ÄÄ·Ä∫ ·Äî·Ä¨·Äõ·ÄÆ·ÄÖ·Äê·ÄÑ·Ä∫·Äù·ÄÑ·Ä∫·Äõ·Ä±·Ä¨·ÄÄ·Ä∫",
      bulkClockOut: "·Ä°·ÄÖ·ÄØ·Äú·Ä≠·ÄØ·ÄÄ·Ä∫ ·Äî·Ä¨·Äõ·ÄÆ·Äë·ÄΩ·ÄÄ·Ä∫·ÄÅ·ÄΩ·Ä¨",
      loading: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏·ÄÄ·Ä≠·ÄØ ·Äê·ÄÑ·Ä∫·Äî·Ä±·Äû·Ää·Ä∫...",
    },
    workLogPage: {
      createdSuccessfully: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äë·Ää·Ä∑·Ä∫·Äû·ÄΩ·ÄÑ·Ä∫·Ä∏·Äô·Äæ·ÄØ ·Ä°·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äº·ÄÑ·Ä∫·Äû·Ää·Ä∫·Åã",
      updatedSuccessfully: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äô·Äæ·ÄØ ·Ä°·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äº·ÄÑ·Ä∫·Äû·Ää·Ä∫·Åã",
      deleteSuccessfully: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äñ·Äª·ÄÄ·Ä∫·Äû·Ä≠·Äô·Ä∫·Ä∏·Äô·Äæ·ÄØ ·Ä°·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äº·ÄÑ·Ä∫·Äû·Ää·Ä∫·Åã",
      totalWorkLogs: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      totalCompletedWorklogs: "·Äï·Äº·ÄÆ·Ä∏·ÄÖ·ÄÆ·Ä∏·Äû·Ä±·Ä¨·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      searchPlaceholder: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·Äô·Ää·Ä∫·Äõ·Ä≠·ÄØ·ÄÄ·Ä∫·Äë·Ää·Ä∑·Ä∫·Åç ·Äõ·Äæ·Ä¨·Äñ·ÄΩ·Ä±·Äï·Ä´...",
      totalQuantityProduced: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äë·ÄØ·Äê·Ä∫·Äú·ÄØ·Äï·Ä∫·Äû·Ä±·Ä¨·Ä°·Äõ·Ä±·Ä°·Äê·ÄΩ·ÄÄ·Ä∫",
      workLogsTitle: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      sortBy: "·ÄÖ·ÄÆ·ÄÖ·Ä•·Ä∫·Äõ·Äî·Ä∫",
      date: "·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤",
      addNewWorkLog: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      fullNameColumn: "·Ä°·Äô·Ää·Ä∫·Ä°·Äï·Äº·Ää·Ä∑·Ä∫·Ä°·ÄÖ·ÄØ·Ä∂",
      employeeIdColumn: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏ ID",
      dateColumn: "·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤",
      productNameColumn: "·Äë·ÄØ·Äê·Ä∫·ÄÄ·ÄØ·Äî·Ä∫·Ä°·Äô·Ää·Ä∫",
      quantityColumn: "·Ä°·Äõ·Ä±·Ä°·Äê·ÄΩ·ÄÄ·Ä∫",
      roleColumn: "·Äõ·Ä¨·Äë·Ä∞·Ä∏",
      totalPriceColumn: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äê·Äî·Ä∫·Äñ·Ä≠·ÄØ·Ä∏",
      noteColumn: "·Äô·Äæ·Äê·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫",
      actionColumn: "·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫",
      editButton: "·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      deleteButton: "·Äñ·Äª·ÄÄ·Ä∫·Äô·Ää·Ä∫",
      deleting: "·Äñ·Äª·ÄÄ·Ä∫·Äî·Ä±·Äû·Ää·Ä∫...",
      addNewWorkLogTitle: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      editWorkLogTitle: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      fullNameLabel: "·Ä°·Äô·Ää·Ä∫·Ä°·Äï·Äº·Ää·Ä∑·Ä∫·Ä°·ÄÖ·ÄØ·Ä∂",
      productRateLabel: "·Äë·ÄØ·Äê·Ä∫·ÄÄ·ÄØ·Äî·Ä∫·Äî·Äæ·ÄØ·Äî·Ä∫·Ä∏",
      quantityLabel: "·Ä°·Äõ·Ä±·Ä°·Äê·ÄΩ·ÄÄ·Ä∫",
      roleLabel: "·Äõ·Ä¨·Äë·Ä∞·Ä∏",
      dateLabel: "·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤",
      noteLabel: "·Äô·Äæ·Äê·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫ (·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äû·Ää·Ä∫)",
      notePlaceholder: "·Ä°·Äï·Ä≠·ÄØ·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·Ä∏·Äô·Äæ·Äê·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫·Äô·Äª·Ä¨·Ä∏...",
      cancelButton: "·Äï·Äö·Ä∫·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
      addWorkLogButton: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      saving: "·Äû·Ä≠·Äô·Ä∫·Ä∏·ÄÜ·Ää·Ä∫·Ä∏·Äî·Ä±·Äû·Ää·Ä∫...",
      saveChangesButton: "·Ä°·Äï·Äº·Ä±·Ä¨·ÄÑ·Ä∫·Ä∏·Ä°·Äú·Ä≤·Äô·Äª·Ä¨·Ä∏·Äû·Ä≠·Äô·Ä∫·Ä∏·Äõ·Äî·Ä∫",
      confirmDeleteTitle: "·Äñ·Äª·ÄÄ·Ä∫·Äû·Ä≠·Äô·Ä∫·Ä∏·Äõ·Äî·Ä∫·Ä°·Äê·Ää·Ä∫·Äï·Äº·ÄØ·Äï·Ä´",
      confirmDeleteMessage1: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·ÄÄ·Ä≠·ÄØ·Äñ·Äª·ÄÄ·Ä∫·Äû·Ä≠·Äô·Ä∫·Ä∏·Äõ·Äî·Ä∫·Äû·Ä±·ÄÅ·Äª·Ä¨·Äï·Ä´·Äû·Äú·Ä¨·Ä∏",
      confirmDeleteMessage2: "·Ä§·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫·ÄÄ·Ä≠·ÄØ ·Äï·Äº·Äî·Ä∫·Äú·Ää·Ä∫·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Åç·Äô·Äõ·Äï·Ä´·Åã",
      deleteButtonConfirm: "·Äñ·Äª·ÄÄ·Ä∫·Äô·Ää·Ä∫",
      selectEmployee: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Äõ·ÄΩ·Ä±·Ä∏·Äï·Ä´",
      optional: "(·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äû·Ää·Ä∫)",
      datePlaceholder: "YYYY-MM-DD",
      inActiveStatus: "·Äú·ÄØ·Äï·Ä∫·ÄÑ·Äî·Ä∫·Ä∏·ÄÅ·ÄΩ·ÄÑ·Ä∫·Äô·Äù·ÄÑ·Ä∫",
      statusOnGoing: "·ÄÜ·ÄÄ·Ä∫·Äú·ÄÄ·Ä∫·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·Äî·Ä±·ÄÜ·Ä≤",
      statusCompleted: "·Äï·Äº·ÄÆ·Ä∏·ÄÖ·ÄÆ·Ä∏",
      statusRejected: "·Äï·Äö·Ä∫·ÄÅ·Äª",
      all: "·Ä°·Ä¨·Ä∏·Äú·ÄØ·Ä∂·Ä∏",
    },
    payrollPage: {
      totalNetPayroll: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äú·ÄÖ·Ä¨",
      totalBonus: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·ÄÜ·ÄØ·ÄÄ·Äº·Ä±·Ä∏",
      totalDeduction: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äñ·Äº·Äê·Ä∫·Äê·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ",
      allPayrollTitle: "·Äú·ÄÖ·Ä¨·Ä°·Ä¨·Ä∏·Äú·ÄØ·Ä∂·Ä∏",
      payrollPeriodDisplay: "·Äú·ÄÖ·Ä¨·ÄÄ·Ä¨·Äú",
      searchPlaceholder: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·Äô·Ää·Ä∫·Äõ·Ä≠·ÄØ·ÄÄ·Ä∫·Äë·Ää·Ä∑·Ä∫·Åç ·Äõ·Äæ·Ä¨·Äñ·ÄΩ·Ä±·Äï·Ä´...",
      exportButton: "·Äï·Ä≠·ÄØ·Ä∑·Äõ·Äî·Ä∫",
      sortBy: "·ÄÖ·ÄÆ·ÄÖ·Ä•·Ä∫·Äõ·Äî·Ä∫",
      date: "·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤",
      fullNameColumn: "·Ä°·Äô·Ää·Ä∫·Ä°·Äï·Äº·Ää·Ä∑·Ä∫·Ä°·ÄÖ·ÄØ·Ä∂",
      roleColumn: "·Äõ·Ä¨·Äë·Ä∞·Ä∏",
      productRateColumn: "·Äë·ÄØ·Äê·Ä∫·ÄÄ·ÄØ·Äî·Ä∫·Äî·Äæ·ÄØ·Äî·Ä∫·Ä∏",
      totalQuantityColumn: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Ä°·Äõ·Ä±·Ä°·Äê·ÄΩ·ÄÄ·Ä∫",
      totalSalaryColumn: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äú·ÄÖ·Ä¨",
      bonusDeductionColumn: "·ÄÜ·ÄØ·ÄÄ·Äº·Ä±·Ä∏/·Äñ·Äº·Äê·Ä∫·Äê·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ",
      netSalaryColumn: "·Ä°·Äû·Ä¨·Ä∏·Äê·ÄÑ·Ä∫·Äú·ÄÖ·Ä¨",
      showing: "·Äï·Äº·Äû·Äî·Ä±·Äû·Ää·Ä∫",
      of: "·Åè",
      payrollEntries: "·Äú·ÄÖ·Ä¨·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏",
      none: "·Äô·Äõ·Äæ·Ä≠·Äï·Ä´",
      addBonusDeductionTitle: "·ÄÜ·ÄØ·ÄÄ·Äº·Ä±·Ä∏ / ·Äñ·Äº·Äê·Ä∫·Äê·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      type: "·Ä°·Äô·Äª·Ä≠·ÄØ·Ä∏·Ä°·ÄÖ·Ä¨·Ä∏",
      bonus: "·ÄÜ·ÄØ·ÄÄ·Äº·Ä±·Ä∏",
      deduction: "·Äñ·Äº·Äê·Ä∫·Äê·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ",
      amount: "·Äï·Äô·Ä¨·Äè",
      notePlaceholder: "·Äô·Äæ·Äê·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äï·Ä´ (·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äû·Ää·Ä∫)",
      optional: "(·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äû·Ää·Ä∫)",
      cancelButton: "·Äï·Äö·Ä∫·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
      saveButton: "·Äû·Ä≠·Äô·Ä∫·Ä∏·Äõ·Äî·Ä∫",
      invalidAmount: "·Äï·Äô·Ä¨·Äè·Äô·Äô·Äæ·Äî·Ä∫·ÄÄ·Äî·Ä∫·Äï·Ä´",
      periodColumn: "·ÄÄ·Ä¨·Äú",
      periodTypeLabel: "·ÄÄ·Ä¨·Äú·Ä°·Äô·Äª·Ä≠·ÄØ·Ä∏·Ä°·ÄÖ·Ä¨·Ä∏",
      periodTypeDay: "·Äõ·ÄÄ·Ä∫",
      periodTypeWeek: "·Äï·Äê·Ä∫",
      periodTypeMonth: "·Äú",
      periodTypeCustom: "·ÄÖ·Ä≠·Äê·Ä∫·ÄÄ·Äº·Ä≠·ÄØ·ÄÄ·Ä∫",
      startDateLabel: "·ÄÖ·Äê·ÄÑ·Ä∫·Äû·Ää·Ä∑·Ä∫·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤",
      endDateLabel: "·Äï·Äº·ÄÆ·Ä∏·ÄÜ·ÄØ·Ä∂·Ä∏·Äû·Ää·Ä∑·Ä∫·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤",
      applyFilterButton: "·ÄÖ·ÄÖ·Ä∫·Äë·ÄØ·Äê·Ä∫·Äô·Ää·Ä∫",
      currentPeriod: "·Äú·ÄÄ·Ä∫·Äõ·Äæ·Ä≠·ÄÄ·Ä¨·Äú",
      paidStatusColumn: "·Äï·Ä±·Ä∏·ÄÅ·Äª·Ä±·Äï·Äº·ÄÆ·Ä∏·Ä°·ÄÅ·Äº·Ä±·Ä°·Äî·Ä±",
      statusPaid: "·Äï·Ä±·Ä∏·Äï·Äº·ÄÆ·Ä∏",
      statusUnpaid: "·Äô·Äï·Ä±·Ä∏·Äõ·Äû·Ä±·Ä∏",
    },
    expenseIncomePage: {
      totalNetIncomeExpense: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Ä°·Äû·Ä¨·Ä∏·Äê·ÄÑ·Ä∫·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±/·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫",
      totalIncome: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±",
      totalExpense: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫",
      incomeTab: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±",
      expenseTab: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫",
      sortBy: "·ÄÖ·ÄÆ·ÄÖ·Ä•·Ä∫·Äõ·Äî·Ä∫",
      amount: "·Äï·Äô·Ä¨·Äè",
      addNewIncome: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      addNewExpense: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      incomeTitleColumn: "·ÄÅ·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·ÄÖ·Äâ·Ä∫",
      expenseTitleColumn: "·ÄÅ·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·ÄÖ·Äâ·Ä∫",
      amountColumn: "·Äï·Äô·Ä¨·Äè",
      dateColumn: "·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤",
      noteColumn: "·Äô·Äæ·Äê·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫",
      actionColumn: "·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫",
      editButton: "·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      deleteButton: "·Äñ·Äª·ÄÄ·Ä∫·Äô·Ää·Ä∫",
      showing: "·Äï·Äº·Äû·Äî·Ä±·Äû·Ää·Ä∫",
      of: "·Åè",
      incomeEntries: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      expenseEntries: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      na: "·Äô·Äõ·Äæ·Ä≠·Äï·Ä´",
      noEntriesFound: "·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Äô·Äê·ÄΩ·Ä±·Ä∑·Äï·Ä´·Åã",
      addNewIncomeTitle: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      addNewExpenseTitle: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      editIncomeTitle: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      editExpenseTitle: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      incomeNamePlaceholder: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·ÄÅ·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·ÄÖ·Äâ·Ä∫",
      expenseTitlePlaceholder: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫·ÄÅ·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·ÄÖ·Äâ·Ä∫",
      clientPlaceholder: "·Äñ·Ä±·Ä¨·ÄÄ·Ä∫·Äû·Ää·Ä∫ (·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äû·Ää·Ä∫)",
      amountPlaceholder: "·Äï·Äô·Ä¨·Äè",
      notePlaceholder: "·Äô·Äæ·Äê·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫ (·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äû·Ää·Ä∫)",
      cancelButton: "·Äï·Äö·Ä∫·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
      addButton: "·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      saving: "·Äû·Ä≠·Äô·Ä∫·Ä∏·ÄÜ·Ää·Ä∫·Ä∏·Äî·Ä±·Äû·Ää·Ä∫...",
      saveChangesButton: "·Ä°·Äï·Äº·Ä±·Ä¨·ÄÑ·Ä∫·Ä∏·Ä°·Äú·Ä≤·Äô·Äª·Ä¨·Ä∏·Äû·Ä≠·Äô·Ä∫·Ä∏·Äõ·Äî·Ä∫",
      optional: "(·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äû·Ää·Ä∫)",
      invalidAmount: "·Äï·Äô·Ä¨·Äè·Äô·Äô·Äæ·Äî·Ä∫·ÄÄ·Äî·Ä∫·Äï·Ä´",
      deleteMessage: "·Ä§·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·ÄÄ·Ä≠·ÄØ ·Äñ·Äª·ÄÄ·Ä∫·Äû·Ä≠·Äô·Ä∫·Ä∏·Äõ·Äî·Ä∫ ·Äû·Ä±·ÄÅ·Äª·Ä¨·Äï·Ä´·Äû·Äú·Ä¨·Ä∏·Åã ·Ä§·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫·ÄÄ·Ä≠·ÄØ ·Äï·Äº·Äî·Ä∫·Äú·Ää·Ä∫·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Åç·Äô·Äõ·Äï·Ä´·Åã",
      confirmDeleteTitle: "·Äñ·Äª·ÄÄ·Ä∫·Äû·Ä≠·Äô·Ä∫·Ä∏·Äõ·Äî·Ä∫·Ä°·Äê·Ää·Ä∫·Äï·Äº·ÄØ·Äï·Ä´",
      confirmDeleteMessage1: "·Ä§·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·ÄÄ·Ä≠·ÄØ ·Äñ·Äª·ÄÄ·Ä∫·Äû·Ä≠·Äô·Ä∫·Ä∏·Äõ·Äî·Ä∫ ·Äû·Ä±·ÄÅ·Äª·Ä¨·Äï·Ä´·Äû·Äú·Ä¨·Ä∏?",
      confirmDeleteMessage2: "·Ä§·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫·ÄÄ·Ä≠·ÄØ ·Äï·Äº·Äî·Ä∫·Äú·Ää·Ä∫·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Åç·Äô·Äõ·Äï·Ä´·Åã",
      deleteButtonConfirm: "·Äñ·Äª·ÄÄ·Ä∫·Äô·Ää·Ä∫",
      createSuccessfully: "·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Äë·Ää·Ä∑·Ä∫·Äû·ÄΩ·ÄÑ·Ä∫·Ä∏·Äô·Äæ·ÄØ ·Ä°·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äº·ÄÑ·Ä∫·Äû·Ää·Ä∫·Åã",
      editSuccessfully: "·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äô·Äæ·ÄØ ·Ä°·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äº·ÄÑ·Ä∫·Äû·Ää·Ä∫·Åã",
      deleteSuccessfully: "·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Äñ·Äª·ÄÄ·Ä∫·Äû·Ä≠·Äô·Ä∫·Ä∏·Äô·Äæ·ÄØ ·Ä°·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äº·ÄÑ·Ä∫·Äû·Ää·Ä∫·Åã",
      periodColumn: "·ÄÄ·Ä¨·Äú",
      periodTypeLabel: "·ÄÄ·Ä¨·Äú·Ä°·Äô·Äª·Ä≠·ÄØ·Ä∏·Ä°·ÄÖ·Ä¨·Ä∏",
      periodTypeDay: "·Äõ·ÄÄ·Ä∫",
      periodTypeWeek: "·Äï·Äê·Ä∫",
      periodTypeMonth: "·Äú",
      periodTypeCustom: "·ÄÖ·Ä≠·Äê·Ä∫·ÄÄ·Äº·Ä≠·ÄØ·ÄÄ·Ä∫",
      startDateLabel: "·ÄÖ·Äê·ÄÑ·Ä∫·Äû·Ää·Ä∑·Ä∫·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤",
      endDateLabel: "·Äï·Äº·ÄÆ·Ä∏·ÄÜ·ÄØ·Ä∂·Ä∏·Äû·Ää·Ä∑·Ä∫·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤",
      applyFilterButton: "·ÄÖ·ÄÖ·Ä∫·Äë·ÄØ·Äê·Ä∫·Äô·Ää·Ä∫",
      currentPeriod: "·Äú·ÄÄ·Ä∫·Äõ·Äæ·Ä≠·ÄÄ·Ä¨·Äú",
      selectPeriod: "·ÄÄ·Ä¨·Äú·Äõ·ÄΩ·Ä±·Ä∏·Äï·Ä´",
    },
    dashboard: {
      allEmployees: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·Ä¨·Ä∏·Äú·ÄØ·Ä∂·Ä∏",
      noData: "·Äí·Ä±·Äê·Ä¨·Äô·Äõ·Äæ·Ä≠·Äï·Ä´",
      noActivities: "·Äô·ÄÄ·Äº·Ä¨·Äû·Ä±·Ä∏·Äô·ÄÆ·ÄÄ·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äæ·ÄØ·Äô·Äª·Ä¨·Ä∏·Äô·Äõ·Äæ·Ä≠·Äï·Ä´",
      weeklyWorklogTrend: "·Ä°·Äï·Äê·Ä∫·ÄÖ·Äâ·Ä∫ ·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·ÄÅ·Ä±·Äê·Ä∫·Äõ·Ä±·ÄÖ·ÄÆ·Ä∏·ÄÄ·Äº·Ä±·Ä¨·ÄÑ·Ä∫·Ä∏",
      bestDay: "·Ä°·ÄÄ·Ä±·Ä¨·ÄÑ·Ä∫·Ä∏·ÄÜ·ÄØ·Ä∂·Ä∏·Äî·Ä±·Ä∑",
      yearlyFinancialOverview: "·Äî·Äæ·ÄÖ·Ä∫·Ä°·Äú·Ä≠·ÄØ·ÄÄ·Ä∫·Äò·Äè·Äπ·Äç·Ä¨·Äõ·Ä±·Ä∏·Ä°·ÄÄ·Äª·Äâ·Ä∫·Ä∏·ÄÅ·Äª·ÄØ·Äï·Ä∫",
      title: "·Äí·ÄÄ·Ä∫·Äõ·Äæ·Ä∫·Äò·ÄØ·Äê·Ä∫",
      totalEmployees: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏",
      onBoardEmployeesByMonth: "·Äú·ÄÖ·Ä•·Ä∫ ·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äù·ÄÑ·Ä∫·Äõ·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ",
      monthlyPayroll: "·Äú·ÄÖ·Äâ·Ä∫·Äú·ÄÖ·Ä¨",
      monthlyIncome: "·Äú·ÄÖ·Äâ·Ä∫·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±",
      monthlyExpenses: "·Äú·ÄÖ·Äâ·Ä∫·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫",
      monthlyProfit: "·Äú·ÄÖ·Äâ·Ä∫·Ä°·Äô·Äº·Äê·Ä∫",
      update: "·Äî·Ä±·Ä¨·ÄÄ·Ä∫·ÄÜ·ÄØ·Ä∂·Ä∏·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äë·Ä¨·Ä∏·Äû·Ää·Ä∫",
      employeePerformanceOverview: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·ÄÖ·ÄΩ·Äô·Ä∫·Ä∏·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·Äõ·Ää·Ä∫·Ä°·ÄÄ·Äª·Äâ·Ä∫·Ä∏·ÄÅ·Äª·ÄØ·Äï·Ä∫",
      activityLog: "·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏",
      payrollTrend: "·Äú·ÄÖ·Ä¨·ÄÅ·Ä±·Äê·Ä∫·Äõ·Ä±·ÄÖ·ÄÆ·Ä∏·ÄÄ·Äº·Ä±·Ä¨·ÄÑ·Ä∫·Ä∏",
      incomeVsExpenses: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·Äî·Äæ·ÄÑ·Ä∫·Ä∑·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫",
      total: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏",
      noActivityFound: "·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫·Äô·Äê·ÄΩ·Ä±·Ä∑·Äï·Ä´",
      worklogQuantity: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Ä°·Äõ·Ä±·Ä°·Äê·ÄΩ·ÄÄ·Ä∫",
      totalValue: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äê·Äî·Ä∫·Äñ·Ä≠·ÄØ·Ä∏",
      monthlyPayrollTitle: "·Äú·ÄÖ·Äâ·Ä∫·Äú·ÄÖ·Ä¨",
      avgWorklogQuantity: "·Äï·Äª·Äô·Ä∫·Ä∏·Äô·Äª·Äæ·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Ä°·Äõ·Ä±·Ä°·Äê·ÄΩ·ÄÄ·Ä∫",
      bestPerformanceDay: "·Ä°·ÄÄ·Ä±·Ä¨·ÄÑ·Ä∫·Ä∏·ÄÜ·ÄØ·Ä∂·Ä∏·ÄÖ·ÄΩ·Äô·Ä∫·Ä∏·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·Äõ·Ää·Ä∫·Äî·Ä±·Ä∑",
      allMonths: "·Äú·Ä°·Ä¨·Ä∏·Äú·ÄØ·Ä∂·Ä∏",
      allYears: "·Äî·Äæ·ÄÖ·Ä∫·Ä°·Ä¨·Ä∏·Äú·ÄØ·Ä∂·Ä∏",
      month: "·Äú",
      year: "·Äî·Äæ·ÄÖ·Ä∫",
    },
    totalEmployees: '',
    present: '',
    absent: '',
    attendanceTitle: '',
    loading: '',
    employeeName: '',
    durationPlaceholder: '',
    actions: '',
    noData: '',
    showing: '',
    of: '',
    selectTime: '',
    cancel: '',
    confirm: ''
  },
};

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const LanguageProvider = ({ children }: { children: ReactNode }) => {
  const [language, setLanguage] = useState<"English" | "Burmese">("English");
  const translations = allAppTranslations[language];

  useEffect(() => {
    // You can add logic here to load the preferred language from localStorage if you want
    const savedLanguage = localStorage.getItem('language') as "English" | "Burmese";
    if (savedLanguage && allAppTranslations[savedLanguage]) {
      setLanguage(savedLanguage);
    }
  }, []);

  const value = useMemo(() => ({
    language,
    setLanguage,
    translations,
    allTranslations: allAppTranslations,
  }), [language, translations]);

  return (
    <LanguageContext.Provider value={value}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};
// React's useMemo is imported from 'react', so you don't need to implement it yourself.
// Remove this function. If you want a custom implementation for learning purposes, here is a simple (non-reactive) version:

function useMemo<T>(factory: () => T, deps: unknown[]): T {
  // This is a naive implementation for demonstration only.
  // It does not provide memoization across renders.
  return factory();
}

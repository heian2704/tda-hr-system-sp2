import React, { createContext, useContext, useState, Dispatch, SetStateAction, ReactNode } from 'react';

// Define specific types for translation structure for better type safety
interface SidebarItem {
  path: string;
  label: string;
  icon: string;
}

export interface EmployeePageTranslations {
  totalEmployee: string;
  active: string;
  onLeave: string;
  allEmployees: string;
  sortBy: string;
  joinDate: string;
  addNewEmployee: string;
  showing: string;
  of: string;
  employees: string;
  fullNameColumn: string;
  employeeIdColumn: string;
  phoneNumberColumn: string;
  addressColumn: string; // NEW: Address column
  roleColumn: string;
  joinDateColumn: string;
  statusColumn: string;
  actionColumn: string;
  editButton: string;
  address: string;
  name: string; // NEW: Address label for modal
  status: string; // NEW: Status label for modal
  // --- NEW MODAL TRANSLATION KEYS ---
  addNewEmployeeTitle: string;
  fullNamePlaceholder: string;
  baseRatePlaceholder: string;
  phoneNumberPlaceholder: string;
  addressPlaceholder: string; // NEW: Address placeholder
  rolePlaceholder: string;
  joinDatePlaceholder: string;
  selectTypeLabel: string;
  activeStatus: string;
  onLeaveStatus: string;
  cancelButton: string;
  addButton: string;
  saving: string;
  // --- NEW EDIT/DELETE MODAL TRANSLATIONS ---
  createSuccessfully: ReactNode;
  editSuccessfully: ReactNode;
  deleteSuccessfully: ReactNode;
  statusUpdate: ReactNode;
  editEmployeeTitle: ReactNode;
  saveChangesButton: ReactNode;
  confirmDeleteTitle: ReactNode;
  confirmDeleteMessage1: ReactNode;
  confirmDeleteMessage2: ReactNode;
  deleteButton: ReactNode;
}

// UPDATED: Define specific types for Work Log page translation structure
interface WorkLogPageTranslations {
  [x: string]: string;
  createdSuccessfully: string;
  updatedSuccessfully: string;
  deleteSuccessfully: string;
  totalWorkLogs: string;
  totalCompletedWorklogs: string;
  totalQuantityProduced: string;
  workLogsTitle: string;
  sortBy: string;
  date: string;
  addNewWorkLog: string;
  fullNameColumn: string;
  employeeIdColumn: string;
  dateColumn: string;
  productNameColumn: string; // Added missing property
  quantityColumn: string;
  roleColumn: string;
  totalPriceColumn: string; // Changed from salaryColumn
  noteColumn: string;
  actionColumn: string;
  showing: string;
  of: string;
  workLogs: string;
  editButton: string;
  deleteButton: string;
  deleting: string;
  // Modal specific translations for WorkLog
  addNewWorkLogTitle: string;
  editWorkLogTitle: string;
  fullNameLabel: string;
  productRateLabel: string;
  quantityLabel: string;
  roleLabel: string;
  dateLabel: string;
  noteLabel: string;
  notePlaceholder: string;
  cancelButton: string;
  addWorkLogButton: string;
  saving: string;
  saveChangesButton: string;
  confirmDeleteTitle: string;
  confirmDeleteMessage1: string;
  confirmDeleteMessage2: string;
  deleteButtonConfirm: string;
  selectEmployee: string;
  optional: string;
  datePlaceholder: string;
  // Status options translations
  statusOnGoing: string;
  statusCompleted: string;
  statusRejected: string;
  all: string; // Added 'All' for status filter dropdown
}

// UPDATED: Define specific types for Payroll page translation structure
interface PayrollPageTranslations {
  totalNetPayroll: string;
  totalBonus: string;
  totalDeduction: string;
  allPayrollTitle: string;
  payrollPeriodDisplay: string;
  exportButton: string;
  sortBy: string;
  date: string;
  fullNameColumn: string;
  roleColumn: string;
  productRateColumn: string;
  totalQuantityColumn: string;
  totalSalaryColumn: string;
  bonusDeductionColumn: string;
  netSalaryColumn: string;
  showing: string;
  of: string;
  payrollEntries: string;
  none: string; // For "Bonus/Deduction" column when no bonus/deduction
  // Bonus/Deduction Modal Translations
  addBonusDeductionTitle: string;
  type: string;
  bonus: string;
  deduction: string;
  amount: string;
  notePlaceholder: string;
  optional: string;
  cancelButton: string;
  saveButton: string;
  invalidAmount: string;
  // Period selection translations
  periodColumn: string;
  periodTypeLabel: string;
  periodTypeDay: string;
  periodTypeWeek: string;
  periodTypeMonth: string;
  periodTypeCustom: string;
  startDateLabel: string;
  endDateLabel: string;
  applyFilterButton: string;
  currentPeriod: string; // For displaying the selected period, e.g., "1/04/2020 - 1/04/2020"
  // NEW: Paid Status translations
  paidStatusColumn: string;
  statusPaid: string;
  statusUnpaid: string;
}

// UPDATED: Define specific types for Expense & Income page translation structure
export interface ExpenseIncomePageTranslations {
  totalNetIncomeExpense: string;
  totalIncome: string;
  totalExpense: string;
  incomeTab: string;
  expenseTab: string;
  sortBy: string;
  amount: string; // Used for "Sort by: Amount"
  addNewIncome: string;
  addNewExpense: string;
  incomeTitleColumn: string;
  expenseTitleColumn: string;
  amountColumn: string; // Changed from categoryColumn to paidToColumn
  dateColumn: string;
  noteColumn: string;
  actionColumn: string;
  editButton: string;
  deleteButton: string;
  showing: string;
  of: string;
  incomeEntries: string;
  expenseEntries: string;
  na: string; // N/A for Note column
  noEntriesFound: string;
  // Modals
  addNewIncomeTitle: string;
  addNewExpenseTitle: string;
  editIncomeTitle: string;
  editExpenseTitle: string;
  incomeNamePlaceholder: string;
  expenseTitlePlaceholder: string;
  clientPlaceholder: string;
  amountPlaceholder: string;
  notePlaceholder: string;
  cancelButton: string;
  addButton: string;
  saving: string;
  saveChangesButton: string;
  optional: string;
  invalidAmount: string;
  deleteMessage: string;
  confirmDeleteTitle: string;
  confirmDeleteMessage1: string;
  confirmDeleteMessage2: string;
  deleteButtonConfirm: string;
  createSuccessfully: string;
  editSuccessfully: string;
  deleteSuccessfully: string;
  // NEW: Period selection translations
  periodColumn:string;
  periodTypeLabel: string;
  periodTypeDay: string;
  periodTypeWeek: string;
  periodTypeMonth: string;
  periodTypeCustom: string;
  startDateLabel: string;
  endDateLabel: string;
  applyFilterButton: string;
  currentPeriod: string; // For displaying the selected period, e.g., "1/04/2020 - 1/04/2020"
  selectPeriod: string; // "Select period..."
}


// Full translations structure used by the context
interface AppTranslations {
  sidebar: SidebarItem[];
  searchPlaceholder: string;
  logout: string;
  employeePage: EmployeePageTranslations;
  workLogPage: WorkLogPageTranslations;
  payrollPage: PayrollPageTranslations;
  expenseIncomePage: ExpenseIncomePageTranslations; // NEW: Nested object for expense & income page translations
  common: {
    loading: string;
    error: string;
    sunday: string;
    monday: string;
    tuesday: string;
    wednesday: string;
    thursday: string;
    friday: string;
    saturday: string;
  }
}

interface AllTranslationsCollection {
  English: AppTranslations;
  Burmese: AppTranslations;
}

// Define the shape of the context value
interface LanguageContextType {
  language: "English" | "Burmese";
  setLanguage: Dispatch<SetStateAction<"English" | "Burmese">>;
  translations: AppTranslations;
  allTranslations: AllTranslationsCollection;
}

// Global translation data
const allAppTranslations: AllTranslationsCollection = {
  English: {
    sidebar: [
      { path: "/dashboard", label: "Dashboard", icon: "üìä" },
      { path: "/employee", label: "Employee", icon: "üßë‚Äçüíº" },
      { path: "/worklog", label: "Work Log", icon: "üïí" },
      { path: "/payroll", label: "Payroll", icon: "üíµ" },
      { path: "/expense-income", label: "Expense & Income", icon: "üí≥" }
    ],
    searchPlaceholder: "Search",
    logout: "Log out",
    common: {
      loading: "Loading",
      error: "Error",
      sunday: "Sunday",
      monday: "Monday",
      tuesday: "Tuesday",
      wednesday: "Wednesday",
      thursday: "Thursday",
      friday: "Friday",
      saturday: "Saturday",
    },
    employeePage: {
      totalEmployee: "Total Employee",
      active: "Active",
      onLeave: "On Leave",
      allEmployees: "All Employees",
      sortBy: "Sort by:",
      joinDate: "Join Date",
      addressPlaceholder: "Address", // NEW: Address placeholder
      addNewEmployee: "Add New Employee",
      showing: "Showing",
      of: "of",
      employees: "employees",
      fullNameColumn: "Full Name",
      employeeIdColumn: "Employee ID",
      phoneNumberColumn: "Phone Number",
      addressColumn: "Address", // NEW: Address column
      roleColumn: "Role",
      joinDateColumn: "Join Date",
      statusColumn: "Status",
      actionColumn: "Action",
      editButton: "Edit",
      address: "Address",
      name: "Name", // Added missing property
      status: "Status", // Added missing property
      // --- MODAL TRANSLATIONS ---
      addNewEmployeeTitle: "Add new employee",
      fullNamePlaceholder: "Full Name",
      baseRatePlaceholder: "Base rate",
      phoneNumberPlaceholder: "Phone number",
      rolePlaceholder: "Role",
      joinDatePlaceholder: "Join date (DD/MM/YYYY)",
      selectTypeLabel: "Select Type",
      activeStatus: "Active",
      onLeaveStatus: "On Leave",
      cancelButton: "Cancel",
      addButton: "Add",
      saving: "Saving...",
      // --- EDIT/DELETE MODAL TRANSLATIONS ---
      createSuccessfully: "Employee created successfully.",
      editSuccessfully: "Employee updated successfully.",
      deleteSuccessfully: "Employee deleted successfully.",
      statusUpdate: "Status updated successfully.",
      editEmployeeTitle: "Edit Employee",
      saveChangesButton: "Save Changes",
      confirmDeleteTitle: "Confirm Deletion",
      confirmDeleteMessage1: "Are you sure you want to delete",
      confirmDeleteMessage2: "? This action cannot be undone.",
      deleteButton: "Delete",
    },
    // UPDATED: Work Log Page Translations (Added 'all' key)
    workLogPage: {
      createdSuccessfully: "Worklog Created",
      updatedSuccessfully: "Worklog Updated",
      deleteSuccessfully: "Worklog Deleted",
      totalWorkLogs: "Total Work Logs",
      totalCompletedWorklogs: "Total Completed Worklogs",
      totalQuantityProduced: "Total Quantity Produced",
      workLogsTitle: "Work Logs",
      sortBy: "Sort by:",
      date: "Date",
      addNewWorkLog: "Add New Work Log",
      fullNameColumn: "Full Name",
      employeeIdColumn: "Employee ID",
      dateColumn: "Date",
      productNameColumn: "Product Name",
      quantityColumn: "Quantity",
      roleColumn: "Role",
      totalPriceColumn: "Total Price",
      noteColumn: "Note",
      actionColumn: "Action",
      showing: "Showing",
      of: "of",
      workLogs: "work logs",
      editButton: "Edit",
      deleteButton: "Delete",
      deleting: "Deleting...",
      // Modal specific translations for WorkLog
      addNewWorkLogTitle: "Add New Work Log",
      editWorkLogTitle: "Edit Work Log",
      fullNameLabel: "Full Name",
      productRateLabel: "Product Rate",
      quantityLabel: "Quantity",
      roleLabel: "Role",
      dateLabel: "Date",
      noteLabel: "Note (Optional)",
      notePlaceholder: "Any additional notes...",
      cancelButton: "Cancel",
      addWorkLogButton: "Add Work Log",
      saving: "Saving...",
      saveChangesButton: "Save Changes",
      confirmDeleteTitle: "Confirm Deletion",
      confirmDeleteMessage1: "Are you sure you want to delete the work log entry for",
      confirmDeleteMessage2: "? This action cannot be undone.",
      deleteButtonConfirm: "Delete",
      selectEmployee: "Select Employee",
      optional: "Optional",
      datePlaceholder: "YYYY-MM-DD",
      // Status options translations
      statusOnGoing: "On Going",
      statusCompleted: "Completed",
      statusRejected: "Rejected",
      all: "All", // Added 'All' for status filter dropdown
    },
    // UPDATED: Payroll Page Translations (Added new keys for period selection and paid status)
    payrollPage: {
      totalNetPayroll: "Total Net Payroll",
      totalBonus: "Total Bonus",
      totalDeduction: "Total Deduction",
      allPayrollTitle: "All Payroll",
      payrollPeriodDisplay: "Payroll Period:",
      exportButton: "Export",
      sortBy: "Sort by:",
      date: "Date",
      fullNameColumn: "Full Name",
      roleColumn: "Role",
      productRateColumn: "Product Rate",
      totalQuantityColumn: "Total Quantity",
      totalSalaryColumn: "Total Salary",
      bonusDeductionColumn: "Bonus/Deduction",
      netSalaryColumn: "Net Salary",
      showing: "Showing",
      of: "of",
      payrollEntries: "payroll entries",
      none: "None",
      // Bonus/Deduction Modal Translations
      addBonusDeductionTitle: "Add Bonus/Deduction",
      type: "Type",
      bonus: "Bonus",
      deduction: "Deduction",
      amount: "Amount",
      notePlaceholder: "Reason for bonus/deduction (optional)",
      optional: "Optional",
      cancelButton: "Cancel",
      saveButton: "Save",
      invalidAmount: "Please enter a valid positive amount.",
      // Period selection translations
      periodColumn: "Date",
      periodTypeLabel: "Select Period:",
      periodTypeDay: "Day",
      periodTypeWeek: "Week",
      periodTypeMonth: "Month",
      periodTypeCustom: "Custom Range",
      startDateLabel: "Start Date:",
      endDateLabel: "End Date:",
      applyFilterButton: "Apply Filter",
      currentPeriod: "Current Period:",
      // NEW: Paid Status translations
      paidStatusColumn: "Paid Status",
      statusPaid: "Paid",
      statusUnpaid: "Unpaid",
    },
    // UPDATED: Expense & Income Page Translations (Updated column/placeholder keys)
    expenseIncomePage: {
      totalNetIncomeExpense: "Total Income & Expense",
      totalIncome: "Total Income",
      totalExpense: "Total Expense",
      incomeTab: "Income",
      expenseTab: "Expense",
      sortBy: "Sort by:",
      amount: "Amount", // for "Sort by: Amount"
      addNewIncome: "Add New Income",
      addNewExpense: "Add New Expense",
      incomeTitleColumn: "Income Title",
      expenseTitleColumn: "Expense Title",
      amountColumn: "Amount",
      dateColumn: "Date",
      noteColumn: "Note",
      actionColumn: "Action",
      editButton: "Edit",
      deleteButton: "Delete",
      showing: "Showing",
      of: "of",
      incomeEntries: "income entries",
      expenseEntries: "expense entries",
      na: "N/A",
      noEntriesFound: "No entries found for this period/filter.",
      // Modals
      addNewIncomeTitle: "Add New Income",
      addNewExpenseTitle: "Add New Expense",
      editIncomeTitle: "Edit Income",
      editExpenseTitle: "Edit Expense",
      incomeNamePlaceholder: "Income Name",
      expenseTitlePlaceholder: "Expense Title",
      clientPlaceholder: "Client",
      amountPlaceholder: "Amount",
      notePlaceholder: "Additional Note...",
      cancelButton: "Cancel",
      addButton: "Add",
      saving: "Saving...",
      saveChangesButton: "Save Changes",
      optional: "Optional",
      invalidAmount: "Please enter a valid positive amount.",
      deleteMessage: "Deleted successfully.",
      confirmDeleteTitle: "Confirm Deletion",
      confirmDeleteMessage1: "Are you sure you want to delete",
      confirmDeleteMessage2: "? This action cannot be undone.",
      deleteButtonConfirm: "Delete",
      createSuccessfully: "Entry created successfully.",
      editSuccessfully: "Entry updated successfully.",
      deleteSuccessfully: "Entry deleted successfully.",
      // NEW: Period selection translations
      periodColumn: "Date",
      periodTypeLabel: "Select Period:",
      periodTypeDay: "Day",
      periodTypeWeek: "Week",
      periodTypeMonth: "Month",
      periodTypeCustom: "Custom Range",
      startDateLabel: "Start Date:",
      endDateLabel: "End Date:",
      applyFilterButton: "Apply Filter",
      currentPeriod: "Current Period:",
      selectPeriod: "Select period...", // For initial display of currentPeriod
    },
  },
  Burmese: {
    sidebar: [
      { path: "/dashboard", label: "·Äï·Äî·Ä∫·Ä∏·Äê·Ä≠·ÄØ·ÄÑ·Ä∫·ÄÖ·Ä¨·Äô·Äª·ÄÄ·Ä∫·Äî·Äæ·Ä¨", icon: "üìä" },
      { path: "/employee", label: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏", icon: "üßë‚Äçüíº" },
      { path: "/worklog", label: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏", icon: "üïí" },
      { path: "/payroll", label: "·Äú·ÄÖ·Ä¨", icon: "üíµ" },
      { path: "/expense-income", label: "·ÄÄ·ÄØ·Äî·Ä∫·ÄÄ·Äª·ÄÖ·Äõ·Ä≠·Äê·Ä∫·Äî·Äæ·ÄÑ·Ä∑·Ä∫ ·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±", icon: "üí≥" }
    ],
    searchPlaceholder: "·Äõ·Äæ·Ä¨·Äñ·ÄΩ·Ä±·Äï·Ä´",
    logout: "·Äë·ÄΩ·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
    common: {
      loading: "·Äê·ÄÑ·Ä∫·Äî·Ä±·Äû·Ää·Ä∫",
      error: "·Ä°·Äô·Äæ·Ä¨·Ä∏",
      sunday: "·Äê·Äî·ÄÑ·Ä∫·Äπ·ÄÇ·Äî·ÄΩ·Ä±",
      monday: "·Äê·Äî·ÄÑ·Ä∫·Äπ·Äú·Ä¨",
      tuesday: "·Ä°·ÄÑ·Ä∫·Äπ·ÄÇ·Ä´",
      wednesday: "·Äó·ÄØ·Äí·Äπ·Äì·Äü·Ä∞·Ä∏",
      thursday: "·ÄÄ·Äº·Ä¨·Äû·Äï·Äê·Ä±·Ä∏",
      friday: "·Äû·Ä±·Ä¨·ÄÄ·Äº·Ä¨",
      saturday: "·ÄÖ·Äî·Ä±",
    },
    employeePage: {
      totalEmployee: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏",
      active: "·Äú·ÄØ·Äï·Ä∫·ÄÑ·Äî·Ä∫·Ä∏·ÄÅ·ÄΩ·ÄÑ·Ä∫·Äù·ÄÑ·Ä∫",
      onLeave: "·ÄÅ·ÄΩ·ÄÑ·Ä∑·Ä∫·Äö·Ä∞·Äë·Ä¨·Ä∏",
      allEmployees: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·Ä¨·Ä∏·Äú·ÄØ·Ä∂·Ä∏",
      sortBy: "·ÄÖ·ÄÆ·ÄÖ·ÄÖ·Ä∫·Äõ·Äî·Ä∫:",
      joinDate: "·Äù·ÄÑ·Ä∫·Äõ·Ä±·Ä¨·ÄÄ·Ä∫·Äû·Ää·Ä∑·Ä∫·Äî·Ä±·Ä∑·ÄÖ·ÄΩ·Ä≤",
      addNewEmployee: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      addressPlaceholder : "·Äú·Ä≠·Äï·Ä∫·ÄÖ·Ä¨", // NEW: Address placeholder
      showing: "·Äï·Äº·Äû·Äî·Ä±·Äû·Ää·Ä∫",
      of: "·Åè",
      employees: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      fullNameColumn: "·Ä°·Äô·Ää·Ä∫·Ä°·Äï·Äº·Ää·Ä∑·Ä∫·Ä°·ÄÖ·ÄØ·Ä∂",
      employeeIdColumn: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏ ID",
      phoneNumberColumn: "·Äñ·ÄØ·Äî·Ä∫·Ä∏·Äî·Ä∂·Äï·Ä´·Äê·Ä∫",
      addressColumn: "·Äú·Ä≠·Äï·Ä∫·ÄÖ·Ä¨", // NEW: Address column
      roleColumn: "·Äõ·Ä¨·Äë·Ä∞·Ä∏",
      joinDateColumn: "·Äï·Ä∞·Ä∏·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äû·Ää·Ä∑·Ä∫·Äî·Ä±·Ä∑",
      statusColumn: "·Ä°·ÄÅ·Äº·Ä±·Ä°·Äî·Ä±",
      actionColumn: "·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫",
      editButton: "·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      address: "·Äú·Ä≠·Äï·Ä∫·ÄÖ·Ä¨",
      name: "·Ä°·Äô·Ää·Ä∫", // Added missing property
      status: "·Ä°·ÄÅ·Äº·Ä±·Ä°·Äî·Ä±", // Added missing property
      // --- MODAL TRANSLATIONS ---
      addNewEmployeeTitle: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      fullNamePlaceholder: "·Ä°·Äô·Ää·Ä∫·Ä°·Äï·Äº·Ää·Ä∑·Ä∫·Ä°·ÄÖ·ÄØ·Ä∂",
      baseRatePlaceholder: "·Ä°·ÄÅ·Äº·Ä±·ÄÅ·Ä∂·Äî·Äæ·ÄØ·Äî·Ä∫·Ä∏",
      phoneNumberPlaceholder: "·Äñ·ÄØ·Äî·Ä∫·Ä∏·Äî·Ä∂·Äï·Ä´·Äê·Ä∫",
      rolePlaceholder: "·Äõ·Ä¨·Äë·Ä∞·Ä∏",
      joinDatePlaceholder: "·Äï·Ä∞·Ä∏·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äû·Ää·Ä∑·Ä∫·Äî·Ä±·Ä∑ (DD/MM/YYYY)",
      selectTypeLabel: "·Ä°·Äô·Äª·Ä≠·ÄØ·Ä∏·Ä°·ÄÖ·Ä¨·Ä∏·Äõ·ÄΩ·Ä±·Ä∏·Äï·Ä´",
      activeStatus: "·Äú·ÄØ·Äï·Ä∫·ÄÑ·Äî·Ä∫·Ä∏·ÄÅ·ÄΩ·ÄÑ·Ä∫·Äù·ÄÑ·Ä∫",
      onLeaveStatus: "·ÄÅ·ÄΩ·ÄÑ·Ä∑·Ä∫·Äö·Ä∞·Äë·Ä¨·Ä∏",
      cancelButton: "·Äï·Äö·Ä∫·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
      addButton: "·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      saving: "·Äô·Äæ·Äê·Ä∫·Äû·Ä¨·Ä∏·Äî·Ä±·Äû·Ää·Ä∫...",
      // --- EDIT/DELETE MODAL TRANSLATIONS ---
      createSuccessfully: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äñ·Äî·Ä∫·Äê·ÄÆ·Ä∏·Äï·Äº·ÄÆ·Ä∏·Äï·Ä´·Äï·Äº·ÄÆ·Åã",
      editSuccessfully: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äï·Äº·ÄÆ·Ä∏·Äï·Ä´·Äï·Äº·ÄÆ·Åã",
      deleteSuccessfully: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Äñ·Äª·ÄÄ·Ä∫·Äï·Äº·ÄÆ·Ä∏·Äï·Ä´·Äï·Äº·ÄÆ·Åã",
      editEmployeeTitle: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      statusUpdate: "·Ä°·ÄÅ·Äº·Ä±·Ä°·Äî·Ä±·Äï·Äº·Ä±·Ä¨·ÄÑ·Ä∫·Ä∏·Äú·Ä≤·Äï·Äº·ÄÆ·Ä∏·Äï·Ä´·Äï·Äº·ÄÆ·Åã",
      saveChangesButton: "·Ä°·Äï·Äº·Ä±·Ä¨·ÄÑ·Ä∫·Ä∏·Ä°·Äú·Ä≤·Äô·Äª·Ä¨·Ä∏ ·Äû·Ä≠·Äô·Ä∫·Ä∏·ÄÜ·Ää·Ä∫·Ä∏·Äõ·Äî·Ä∫",
      confirmDeleteTitle: "·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫ ·Ä°·Äê·Ää·Ä∫·Äï·Äº·ÄØ·Äï·Ä´",
      confirmDeleteMessage1: "·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫·Äû·Ä±·ÄÅ·Äª·Ä¨·Äï·Ä´·Äû·Äú·Ä¨·Ä∏",
      confirmDeleteMessage2: " ·Ä§·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫·ÄÄ·Ä≠·ÄØ ·Äï·Äº·Äî·Ä∫·Äñ·Äª·ÄÄ·Ä∫·Åç·Äô·Äõ·Äï·Ä´·Åã",
      deleteButton: "·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
    },
    // UPDATED: Work Log Page Translations (Added 'all' key)
    workLogPage: {
      createdSuccessfully: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äï·Äº·ÄÆ·Ä∏·Äï·Ä´·Äï·Äº·ÄÆ",
      updatedSuccessfully: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äï·Äº·ÄÆ·Ä∏·Äï·Ä´·Äï·Äº·ÄÆ",
      deleteSuccessfully: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äñ·Äª·ÄÄ·Ä∫·Äï·Äº·ÄÆ·Ä∏·Äï·Ä´·Äï·Äº·ÄÆ",
      totalWorkLogs: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      totalCompletedWorklogs: "·Äï·Äº·ÄÆ·Ä∏·ÄÖ·ÄÆ·Ä∏·Äú·ÄØ·Äï·Ä∫·ÄÑ·Äî·Ä∫·Ä∏·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Ä°·Äõ·Ä±·Ä°·Äê·ÄΩ·ÄÄ·Ä∫",
      totalQuantityProduced: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äë·ÄØ·Äê·Ä∫·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·ÄØ·Äï·Äô·Ä¨·Äè",
      workLogsTitle: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      sortBy: "·ÄÖ·ÄÆ·ÄÖ·ÄÖ·Ä∫·Äõ·Äî·Ä∫:",
      date: "·Äî·Ä±·Ä∑·ÄÖ·ÄΩ·Ä≤",
      addNewWorkLog: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      fullNameColumn: "·Ä°·Äô·Ää·Ä∫·Ä°·Äï·Äº·Ää·Ä∑·Ä∫·Ä°·ÄÖ·ÄØ·Ä∂",
      employeeIdColumn: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏ ID",
      dateColumn: "·Äî·Ä±·Ä∑·ÄÖ·ÄΩ·Ä≤",
      productNameColumn: "·Äë·ÄØ·Äê·Ä∫·ÄÄ·ÄØ·Äî·Ä∫·Ä°·Äô·Ää·Ä∫",
      quantityColumn: "·Äï·Äô·Ä¨·Äè",
      roleColumn: "·Äõ·Ä¨·Äë·Ä∞·Ä∏",
      totalPriceColumn: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äà·Ä±·Ä∏·Äî·Äæ·ÄØ·Äî·Ä∫·Ä∏",
      noteColumn: "·Äô·Äæ·Äê·Ä∫·ÄÖ·ÄØ",
      actionColumn: "·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫",
      showing: "·Äï·Äº·Äû·Äî·Ä±·Äû·Ää·Ä∫",
      of: "·Åè",
      workLogs: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      editButton: "·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      deleteButton: "·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
      deleting: "·Äñ·Äª·ÄÄ·Ä∫·Äî·Ä±·Äû·Ää·Ä∫...",
      // Modal specific translations for WorkLog
      addNewWorkLogTitle: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      editWorkLogTitle: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      fullNameLabel: "·Ä°·Äô·Ää·Ä∫·Ä°·Äï·Äº·Ää·Ä∑·Ä∫·Ä°·ÄÖ·ÄØ·Ä∂",
      productRateLabel: "·Äë·ÄØ·Äê·Ä∫·ÄÄ·ÄØ·Äî·Ä∫·Äî·Äæ·ÄØ·Äî·Ä∫·Ä∏",
      quantityLabel: "·Äï·Äô·Ä¨·Äè",
      roleLabel: "·Äõ·Ä¨·Äë·Ä∞·Ä∏",
      dateLabel: "·Äî·Ä±·Ä∑·ÄÖ·ÄΩ·Ä≤",
      noteLabel: "·Äô·Äæ·Äê·Ä∫·ÄÖ·ÄØ (·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äû·Ää·Ä∫)",
      notePlaceholder: "·Ä°·ÄÅ·Äº·Ä¨·Ä∏·Äô·Äæ·Äê·Ä∫·ÄÖ·ÄØ·Äô·Äª·Ä¨·Ä∏...",
      cancelButton: "·Äï·Äö·Ä∫·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
      addWorkLogButton: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      saving: "·Äô·Äæ·Äê·Ä∫·Äû·Ä¨·Ä∏·Äî·Ä±·Äû·Ää·Ä∫...",
      saveChangesButton: "·Ä°·Äï·Äº·Ä±·Ä¨·ÄÑ·Ä∫·Ä∏·Ä°·Äú·Ä≤·Äô·Äª·Ä¨·Ä∏ ·Äû·Ä≠·Äô·Ä∫·Ä∏·ÄÜ·Ää·Ä∫·Ä∏·Äõ·Äî·Ä∫",
      confirmDeleteTitle: "·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫ ·Ä°·Äê·Ää·Ä∫·Äï·Äº·ÄØ·Äï·Ä´",
      confirmDeleteMessage1: "·Ä°·Äú·ÄØ·Äï·Ä∫·Äô·Äæ·Äê·Ä∫·Äê·Äô·Ä∫·Ä∏·Ä°·Äê·ÄΩ·ÄÄ·Ä∫ ·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫·Äû·Ä±·ÄÅ·Äª·Ä¨·Äï·Ä´·Äû·Äú·Ä¨·Ä∏",
      confirmDeleteMessage2: " ·Ä§·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫·ÄÄ·Ä≠·ÄØ ·Äï·Äº·Äî·Ä∫·Äñ·Äª·ÄÄ·Ä∫·Åç·Äô·Äõ·Äï·Ä´·Åã",
      deleteButtonConfirm: "·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
      selectEmployee: "·Äù·Äî·Ä∫·Äë·Äô·Ä∫·Ä∏·Äõ·ÄΩ·Ä±·Ä∏·Äï·Ä´",
      optional: "·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äû·Ää·Ä∫",
      datePlaceholder: "YYYY-MM-DD (·Ä•·Äï·Äô·Ä¨: 2025-06-22)",
      // Status options translations
      statusOnGoing: "·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·Äõ·ÄΩ·ÄÄ·Ä∫·ÄÜ·Ä≤",
      statusCompleted: "·Äï·Äº·ÄÆ·Ä∏·ÄÖ·ÄÆ·Ä∏",
      statusRejected: "·ÄÑ·Äº·ÄÑ·Ä∫·Ä∏·Äï·Äö·Ä∫",
      all: "·Ä°·Ä¨·Ä∏·Äú·ÄØ·Ä∂·Ä∏", // Added 'All' for status filter dropdown
    },
    // UPDATED: Payroll Page Translations (Added new keys for period selection and paid status)
    payrollPage: {
      totalNetPayroll: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äú·ÄÖ·Ä¨",
      totalBonus: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Ä°·Äï·Ä≠·ÄØ·ÄÜ·ÄØ",
      totalDeduction: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äñ·Äº·Äê·Ä∫·Äê·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ",
      allPayrollTitle: "·Äú·ÄÖ·Ä¨·Ä°·Ä¨·Ä∏·Äú·ÄØ·Ä∂·Ä∏",
      payrollPeriodDisplay: "·Äú·ÄÖ·Ä¨·ÄÄ·Ä¨·Äú:",
      exportButton: "·Äë·ÄØ·Äê·Ä∫·Äõ·Äî·Ä∫",
      sortBy: "·ÄÖ·ÄÆ·ÄÖ·ÄÖ·Ä∫·Äõ·Äî·Ä∫:",
      date: "·Äî·Ä±·Ä∑·ÄÖ·ÄΩ·Ä≤",
      fullNameColumn: "·Ä°·Äô·Ää·Ä∫·Ä°·Äï·Äº·Ää·Ä∑·Ä∫·Ä°·ÄÖ·ÄØ·Ä∂",
      roleColumn: "·Äõ·Ä¨·Äë·Ä∞·Ä∏",
      productRateColumn: "·Äë·ÄØ·Äê·Ä∫·ÄÄ·ÄØ·Äî·Ä∫·Äî·Äæ·ÄØ·Äî·Ä∫·Ä∏",
      totalQuantityColumn: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äï·Äô·Ä¨·Äè",
      totalSalaryColumn: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äú·ÄÖ·Ä¨",
      bonusDeductionColumn: "·Ä°·Äï·Ä≠·ÄØ·ÄÜ·ÄØ/·Äñ·Äº·Äê·Ä∫·Äê·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ",
      netSalaryColumn: "·Ä°·Äû·Ä¨·Ä∏·Äê·ÄÑ·Ä∫·Äú·ÄÖ·Ä¨",
      showing: "·Äï·Äº·Äû·Äî·Ä±·Äû·Ää·Ä∫",
      of: "·Åè",
      payrollEntries: "·Äú·ÄÖ·Ä¨·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      none: "·Äô·Äõ·Äæ·Ä≠·Äï·Ä´",
      // Bonus/Deduction Modal Translations
      addBonusDeductionTitle: "·Ä°·Äï·Ä≠·ÄØ·ÄÜ·ÄØ/·Äñ·Äº·Äê·Ä∫·Äê·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ ·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      type: "·Ä°·Äô·Äª·Ä≠·ÄØ·Ä∏·Ä°·ÄÖ·Ä¨·Ä∏",
      bonus: "·Ä°·Äï·Ä≠·ÄØ·ÄÜ·ÄØ",
      deduction: "·Äñ·Äº·Äê·Ä∫·Äê·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ",
      amount: "·Äï·Äô·Ä¨·Äè",
      notePlaceholder: "·Ä°·Äï·Ä≠·ÄØ·ÄÜ·ÄØ/·Äñ·Äº·Äê·Ä∫·Äê·Ä±·Ä¨·ÄÄ·Ä∫·Äô·Äæ·ÄØ·Ä°·Äê·ÄΩ·ÄÄ·Ä∫ ·Äô·Äæ·Äê·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫ (·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äû·Ää·Ä∫)",
      optional: "·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äû·Ää·Ä∫",
      cancelButton: "·Äï·Äö·Ä∫·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
      saveButton: "·Äû·Ä≠·Äô·Ä∫·Ä∏·ÄÜ·Ää·Ä∫·Ä∏·Äõ·Äî·Ä∫",
      invalidAmount: "·Äô·Äæ·Äî·Ä∫·ÄÄ·Äî·Ä∫·Äû·Ä±·Ä¨ ·Äï·Äô·Ä¨·Äè·ÄÄ·Ä≠·ÄØ ·Äë·Ää·Ä∑·Ä∫·Äû·ÄΩ·ÄÑ·Ä∫·Ä∏·Äï·Ä´·Åã",
      // Period selection translations
      periodColumn: "·Äî·Ä±·Ä∑·ÄÖ·ÄΩ·Ä≤",
      periodTypeLabel: "·ÄÄ·Ä¨·Äú·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äï·Ä´:",
      periodTypeDay: "·Äî·Ä±·Ä∑·ÄÖ·Äâ·Ä∫",
      periodTypeWeek: "·Ä°·Äï·Äê·Ä∫·ÄÖ·Äâ·Ä∫",
      periodTypeMonth: "·Äú·ÄÖ·Äâ·Ä∫",
      periodTypeCustom: "·ÄÖ·Ä≠·Äê·Ä∫·ÄÄ·Äº·Ä≠·ÄØ·ÄÄ·Ä∫·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤",
      startDateLabel: "·ÄÖ·Äê·ÄÑ·Ä∫·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤:",
      endDateLabel: "·Äï·Äº·ÄÆ·Ä∏·ÄÜ·ÄØ·Ä∂·Ä∏·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤:",
      applyFilterButton: "·ÄÖ·ÄÖ·Ä∫·Äë·ÄØ·Äê·Ä∫·Äõ·Äî·Ä∫",
      currentPeriod: "·Äú·ÄÄ·Ä∫·Äõ·Äæ·Ä≠·ÄÄ·Ä¨·Äú:",
      // NEW: Paid Status translations
      paidStatusColumn: "·Äï·Ä±·Ä∏·ÄÅ·Äª·Ä±·Äô·Äæ·ÄØ·Ä°·ÄÅ·Äº·Ä±·Ä°·Äî·Ä±",
      statusPaid: "·Äï·Ä±·Ä∏·Äï·Äº·ÄÆ·Ä∏",
      statusUnpaid: "·Äô·Äï·Ä±·Ä∏·Äõ·Äû·Ä±·Ä∏",
    },
    // UPDATED: Expense & Income Page Translations (Updated column/placeholder keys)
    expenseIncomePage: {
      totalNetIncomeExpense: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·Äî·Äæ·ÄÑ·Ä∑·Ä∫·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫",
      totalIncome: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±",
      totalExpense: "·ÄÖ·ÄØ·ÄÖ·ÄØ·Äï·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫",
      incomeTab: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±",
      expenseTab: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫",
      sortBy: "·ÄÖ·ÄÆ·ÄÖ·ÄÖ·Ä∫·Äõ·Äî·Ä∫:",
      amount: "·Äï·Äô·Ä¨·Äè", // for "Sort by: Amount"
      addNewIncome: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      addNewExpense: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      incomeTitleColumn: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·ÄÅ·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·ÄÖ·Ä•·Ä∫",
      expenseTitleColumn: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫·ÄÅ·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·ÄÖ·Ä•·Ä∫",
      amountColumn: "·Äï·Äô·Ä¨·Äè",
      dateColumn: "·Äî·Ä±·Ä∑·ÄÖ·ÄΩ·Ä≤",
      noteColumn: "·Äô·Äæ·Äê·Ä∫·ÄÖ·ÄØ",
      actionColumn: "·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫",
      editButton: "·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      deleteButton: "·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
      showing: "·Äï·Äº·Äû·Äî·Ä±·Äû·Ää·Ä∫",
      of: "·Åè",
      incomeEntries: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      expenseEntries: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Äô·Äª·Ä¨·Ä∏",
      na: "·Äô·Äû·ÄÄ·Ä∫·ÄÜ·Ä≠·ÄØ·ÄÑ·Ä∫·Äï·Ä´",
      noEntriesFound: "·Äô·Ää·Ä∫·Äû·Ää·Ä∑·Ä∫·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Äô·Äª·Äæ·Äô·Äê·ÄΩ·Ä±·Ä∑·Äï·Ä´·Åã",
      // Modals
      addNewIncomeTitle: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      addNewExpenseTitle: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫·Ä°·Äû·ÄÖ·Ä∫·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      editIncomeTitle: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      editExpenseTitle: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äõ·Äî·Ä∫",
      incomeNamePlaceholder: "·Äù·ÄÑ·Ä∫·ÄÑ·ÄΩ·Ä±·Ä°·Äô·Ää·Ä∫",
      expenseTitlePlaceholder: "·Ä°·Äû·ÄØ·Ä∂·Ä∏·ÄÖ·Äõ·Ä≠·Äê·Ä∫·ÄÅ·Ä±·Ä´·ÄÑ·Ä∫·Ä∏·ÄÖ·Ä•·Ä∫",
      clientPlaceholder: "·Äñ·Ä±·Ä¨·ÄÄ·Ä∫·Äû·Ää·Ä∫",
      amountPlaceholder: "·Äï·Äô·Ä¨·Äè",
      notePlaceholder: "·Ä°·ÄÅ·Äº·Ä¨·Ä∏·Äô·Äæ·Äê·Ä∫·ÄÖ·ÄØ·Äô·Äª·Ä¨·Ä∏...",
      cancelButton: "·Äï·Äö·Ä∫·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
      addButton: "·Äë·Ää·Ä∑·Ä∫·Äõ·Äî·Ä∫",
      saving: "·Äô·Äæ·Äê·Ä∫·Äû·Ä¨·Ä∏·Äî·Ä±·Äû·Ää·Ä∫...",
      saveChangesButton: "·Ä°·Äï·Äº·Ä±·Ä¨·ÄÑ·Ä∫·Ä∏·Ä°·Äú·Ä≤·Äô·Äª·Ä¨·Ä∏ ·Äû·Ä≠·Äô·Ä∫·Ä∏·ÄÜ·Ää·Ä∫·Ä∏·Äõ·Äî·Ä∫",
      optional: "·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äî·Ä≠·ÄØ·ÄÑ·Ä∫·Äû·Ää·Ä∫",
      invalidAmount: "·Äô·Äæ·Äî·Ä∫·ÄÄ·Äî·Ä∫·Äû·Ä±·Ä¨ ·Äï·Äô·Ä¨·Äè·ÄÄ·Ä≠·ÄØ ·Äë·Ää·Ä∑·Ä∫·Äû·ÄΩ·ÄÑ·Ä∫·Ä∏·Äï·Ä´·Åã",
      deleteMessage: "·Ä°·Ä±·Ä¨·ÄÑ·Ä∫·Äô·Äº·ÄÑ·Ä∫·ÄÖ·ÄΩ·Ä¨ ·Äñ·Äª·ÄÄ·Ä∫·Äú·Ä≠·ÄØ·ÄÄ·Ä∫·Äï·Ä´·Äï·Äº·ÄÆ·Åã",
      confirmDeleteTitle: "·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫ ·Ä°·Äê·Ää·Ä∫·Äï·Äº·ÄØ·Äï·Ä´",
      confirmDeleteMessage1: "·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫·Äû·Ä±·ÄÅ·Äª·Ä¨·Äï·Ä´·Äû·Äú·Ä¨·Ä∏",
      confirmDeleteMessage2: " ·Ä§·Äú·ÄØ·Äï·Ä∫·ÄÜ·Ä±·Ä¨·ÄÑ·Ä∫·ÄÅ·Äª·ÄÄ·Ä∫·ÄÄ·Ä≠·ÄØ ·Äï·Äº·Äî·Ä∫·Äñ·Äª·ÄÄ·Ä∫·Åç·Äô·Äõ·Äï·Ä´·Åã",
      deleteButtonConfirm: "·Äñ·Äª·ÄÄ·Ä∫·Äõ·Äî·Ä∫",
      createSuccessfully: "·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Ä°·Äû·ÄÖ·Ä∫·Äñ·Äî·Ä∫·Äê·ÄÆ·Ä∏·Äï·Äº·ÄÆ·Ä∏·Äï·Ä´·Äï·Äº·ÄÆ·Åã",
      editSuccessfully: "·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Äï·Äº·ÄÑ·Ä∫·ÄÜ·ÄÑ·Ä∫·Äï·Äº·ÄÆ·Ä∏·Äï·Ä´·Äï·Äº·ÄÆ·Åã",
      deleteSuccessfully: "·ÄÖ·Ä¨·Äõ·ÄÑ·Ä∫·Ä∏·Äñ·Äª·ÄÄ·Ä∫·Äï·Äº·ÄÆ·Ä∏·Äï·Ä´·Äï·Äº·ÄÆ·Åã",
      // NEW: Period selection translations
      periodColumn: "·Äî·Ä±·Ä∑·ÄÖ·ÄΩ·Ä≤",
      periodTypeLabel: "·ÄÄ·Ä¨·Äú·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äï·Ä´:",
      periodTypeDay: "·Äî·Ä±·Ä∑·ÄÖ·Äâ·Ä∫",
      periodTypeWeek: "·Ä°·Äï·Äê·Ä∫·ÄÖ·Äâ·Ä∫",
      periodTypeMonth: "·Äú·ÄÖ·Äâ·Ä∫",
      periodTypeCustom: "·ÄÖ·Ä≠·Äê·Ä∫·ÄÄ·Äº·Ä≠·ÄØ·ÄÄ·Ä∫·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤",
      startDateLabel: "·ÄÖ·Äê·ÄÑ·Ä∫·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤:",
      endDateLabel: "·Äï·Äº·ÄÆ·Ä∏·ÄÜ·ÄØ·Ä∂·Ä∏·Äõ·ÄÄ·Ä∫·ÄÖ·ÄΩ·Ä≤:",
      applyFilterButton: "·ÄÖ·ÄÖ·Ä∫·Äë·ÄØ·Äê·Ä∫·Äõ·Äî·Ä∫",
      currentPeriod: "·Äú·ÄÄ·Ä∫·Äõ·Äæ·Ä≠·ÄÄ·Ä¨·Äú:",
      selectPeriod: "·ÄÄ·Ä¨·Äú·Äõ·ÄΩ·Ä±·Ä∏·ÄÅ·Äª·Äö·Ä∫·Äï·Ä´...", // For initial display of currentPeriod
    },
  },
};

// Create the context with a default undefined value (will be set by provider)
export const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

// Provider component to wrap your application or part of it
export const LanguageProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [language, setLanguage] = useState<"English" | "Burmese">("English");

  const translations = allAppTranslations[language];

  const contextValue = {
    language,
    setLanguage,
    translations, // Current language translations
    allTranslations: allAppTranslations, // All translations for potential future use (e.g., in language switcher)
  };

  return (
    <LanguageContext.Provider value={contextValue}>
      {children}
    </LanguageContext.Provider>
  );
};

// Custom hook to easily consume the language context
export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};
